// Code generated by girgen. DO NOT EDIT.

package cairo

import (
	"unsafe"

	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: cairo-gobject gobject-introspection-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <cairo-gobject.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.cairo_gobject_status_get_type()), F: marshalStatus},
		{T: externglib.Type(C.cairo_gobject_content_get_type()), F: marshalContent},
		{T: externglib.Type(C.cairo_gobject_operator_get_type()), F: marshalOperator},
		{T: externglib.Type(C.cairo_gobject_antialias_get_type()), F: marshalAntialias},
		{T: externglib.Type(C.cairo_gobject_fill_rule_get_type()), F: marshalFillRule},
		{T: externglib.Type(C.cairo_gobject_line_cap_get_type()), F: marshalLineCap},
		{T: externglib.Type(C.cairo_gobject_line_join_get_type()), F: marshalLineJoin},
		{T: externglib.Type(C.cairo_gobject_text_cluster_flags_get_type()), F: marshalTextClusterFlags},
		{T: externglib.Type(C.cairo_gobject_font_slant_get_type()), F: marshalFontSlant},
		{T: externglib.Type(C.cairo_gobject_font_weight_get_type()), F: marshalFontWeight},
		{T: externglib.Type(C.cairo_gobject_subpixel_order_get_type()), F: marshalSubpixelOrder},
		{T: externglib.Type(C.cairo_gobject_hint_style_get_type()), F: marshalHintStyle},
		{T: externglib.Type(C.cairo_gobject_hint_metrics_get_type()), F: marshalHintMetrics},
		{T: externglib.Type(C.cairo_gobject_font_type_get_type()), F: marshalFontType},
		{T: externglib.Type(C.cairo_gobject_path_data_type_get_type()), F: marshalPathDataType},
		{T: externglib.Type(C.cairo_gobject_device_type_get_type()), F: marshalDeviceType},
		{T: externglib.Type(C.cairo_gobject_surface_type_get_type()), F: marshalSurfaceType},
		{T: externglib.Type(C.cairo_gobject_format_get_type()), F: marshalFormat},
		{T: externglib.Type(C.cairo_gobject_pattern_type_get_type()), F: marshalPatternType},
		{T: externglib.Type(C.cairo_gobject_extend_get_type()), F: marshalExtend},
		{T: externglib.Type(C.cairo_gobject_filter_get_type()), F: marshalFilter},
		{T: externglib.Type(C.cairo_gobject_region_overlap_get_type()), F: marshalRegionOverlap},
		{T: externglib.Type(C.cairo_gobject_context_get_type()), F: marshalContext},
		{T: externglib.Type(C.cairo_gobject_device_get_type()), F: marshalDevice},
		{T: externglib.Type(C.cairo_gobject_surface_get_type()), F: marshalSurface},
		{T: externglib.Type(C.cairo_gobject_pattern_get_type()), F: marshalPattern},
		{T: externglib.Type(C.cairo_gobject_region_get_type()), F: marshalRegion},
		{T: externglib.Type(C.cairo_gobject_font_options_get_type()), F: marshalFontOptions},
		{T: externglib.Type(C.cairo_gobject_font_face_get_type()), F: marshalFontFace},
		{T: externglib.Type(C.cairo_gobject_scaled_font_get_type()), F: marshalScaledFont},
		{T: externglib.Type(C.cairo_gobject_rectangle_get_type()), F: marshalRectangle},
		{T: externglib.Type(C.cairo_gobject_rectangle_int_get_type()), F: marshalRectangleInt},
	})
}

type Status int

const (
	Success Status = iota
	NoMemory
	InvalidRestore
	InvalidPopGroup
	NoCurrentPoint
	InvalidMatrix
	InvalidStatus
	NullPointer
	InvalidString
	InvalidPathData
	ReadError
	WriteError
	SurfaceFinished
	SurfaceTypeMismatch
	PatternTypeMismatch
	InvalidContent
	InvalidFormat
	InvalidVisual
	FileNotFound
	InvalidDash
	InvalidDscComment
	InvalidIndex
	ClipNotRepresentable
	TempFileError
	InvalidStride
	FontTypeMismatch
	UserFontImmutable
	UserFontError
	NegativeCount
	InvalidClusters
	InvalidSlant
	InvalidWeight
	InvalidSize
	UserFontNotImplemented
	DeviceTypeMismatch
	DeviceError
	InvalidMeshConstruction
	DeviceFinished
	Jbig2GlobalMissing
)

func marshalStatus(p uintptr) (interface{}, error) {
	return Status(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type Content int

const (
	Color      Content = 4096
	Alpha      Content = 8192
	ColorAlpha Content = 12288
)

func marshalContent(p uintptr) (interface{}, error) {
	return Content(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type Operator int

const (
	Clear Operator = iota
	Source
	Over
	In
	Out
	Atop
	Dest
	DestOver
	DestIn
	DestOut
	DestAtop
	Xor
	Add
	Saturate
	Multiply
	Screen
	Overlay
	Darken
	Lighten
	ColorDodge
	ColorBurn
	HardLight
	SoftLight
	Difference
	Exclusion
	HSLHue
	HSLSaturation
	HSLColor
	HSLLuminosity
)

func marshalOperator(p uintptr) (interface{}, error) {
	return Operator(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type Antialias int

const (
	Default Antialias = iota
	None
	Gray
	Subpixel
	Fast
	Good
	Best
)

func marshalAntialias(p uintptr) (interface{}, error) {
	return Antialias(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type FillRule int

const (
	Winding FillRule = iota
	EvenOdd
)

func marshalFillRule(p uintptr) (interface{}, error) {
	return FillRule(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type LineCap int

const (
	Butt LineCap = iota
	Round
	Square
)

func marshalLineCap(p uintptr) (interface{}, error) {
	return LineCap(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type LineJoin int

const (
	Miter LineJoin = iota
	Round
	Bevel
)

func marshalLineJoin(p uintptr) (interface{}, error) {
	return LineJoin(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type TextClusterFlags int

const (
	Backward TextClusterFlags = 1
)

func marshalTextClusterFlags(p uintptr) (interface{}, error) {
	return TextClusterFlags(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type FontSlant int

const (
	Normal FontSlant = iota
	Italic
	Oblique
)

func marshalFontSlant(p uintptr) (interface{}, error) {
	return FontSlant(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type FontWeight int

const (
	Normal FontWeight = iota
	Bold
)

func marshalFontWeight(p uintptr) (interface{}, error) {
	return FontWeight(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type SubpixelOrder int

const (
	Default SubpixelOrder = iota
	RGB
	BGR
	VRGB
	VBGR
)

func marshalSubpixelOrder(p uintptr) (interface{}, error) {
	return SubpixelOrder(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type HintStyle int

const (
	Default HintStyle = iota
	None
	Slight
	Medium
	Full
)

func marshalHintStyle(p uintptr) (interface{}, error) {
	return HintStyle(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type HintMetrics int

const (
	Default HintMetrics = iota
	Off
	On
)

func marshalHintMetrics(p uintptr) (interface{}, error) {
	return HintMetrics(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type FontType int

const (
	Toy FontType = iota
	FT
	Win32
	Quartz
	User
)

func marshalFontType(p uintptr) (interface{}, error) {
	return FontType(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type PathDataType int

const (
	MoveTo PathDataType = iota
	LineTo
	CurveTo
	ClosePath
)

func marshalPathDataType(p uintptr) (interface{}, error) {
	return PathDataType(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type DeviceType int

const (
	DRM     DeviceType = 0
	GL      DeviceType = 1
	Script  DeviceType = 2
	Xcb     DeviceType = 3
	Xlib    DeviceType = 4
	XML     DeviceType = 5
	COGL    DeviceType = 6
	Win32   DeviceType = 7
	Invalid DeviceType = -1
)

func marshalDeviceType(p uintptr) (interface{}, error) {
	return DeviceType(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type SurfaceType int

const (
	Image SurfaceType = iota
	PDF
	PS
	Xlib
	Xcb
	Glitz
	Quartz
	Win32
	BeOS
	DirectFB
	Svg
	OS2
	Win32Printing
	QuartzImage
	Script
	Qt
	Recording
	Vg
	GL
	DRM
	Tee
	XML
	Skia
	Subsurface
	COGL
)

func marshalSurfaceType(p uintptr) (interface{}, error) {
	return SurfaceType(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type Format int

const (
	Invalid  Format = -1
	ARGB32   Format = 0
	RGB24    Format = 1
	A8       Format = 2
	A1       Format = 3
	RGB16565 Format = 4
	RGB30    Format = 5
)

func marshalFormat(p uintptr) (interface{}, error) {
	return Format(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type PatternType int

const (
	Solid PatternType = iota
	Surface
	Linear
	Radial
	Mesh
	RasterSource
)

func marshalPatternType(p uintptr) (interface{}, error) {
	return PatternType(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type Extend int

const (
	None Extend = iota
	Repeat
	Reflect
	Pad
)

func marshalExtend(p uintptr) (interface{}, error) {
	return Extend(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type Filter int

const (
	Fast Filter = iota
	Good
	Best
	Nearest
	Bilinear
	Gaussian
)

func marshalFilter(p uintptr) (interface{}, error) {
	return Filter(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type RegionOverlap int

const (
	In RegionOverlap = iota
	Out
	Part
)

func marshalRegionOverlap(p uintptr) (interface{}, error) {
	return RegionOverlap(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

type Context struct {
	native C.cairo_t
}

// WrapContext wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapContext(ptr unsafe.Pointer) *Context {
	return (*Context)(ptr)
}

func marshalContext(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*Context)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (c *Context) Native() unsafe.Pointer {
	return unsafe.Pointer(&c.native)
}

type Device struct {
	native C.cairo_device_t
}

// WrapDevice wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapDevice(ptr unsafe.Pointer) *Device {
	return (*Device)(ptr)
}

func marshalDevice(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*Device)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (d *Device) Native() unsafe.Pointer {
	return unsafe.Pointer(&d.native)
}

type Surface struct {
	native C.cairo_surface_t
}

// WrapSurface wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapSurface(ptr unsafe.Pointer) *Surface {
	return (*Surface)(ptr)
}

func marshalSurface(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*Surface)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (s *Surface) Native() unsafe.Pointer {
	return unsafe.Pointer(&s.native)
}

type Matrix struct {
	native C.cairo_matrix_t
}

// WrapMatrix wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapMatrix(ptr unsafe.Pointer) *Matrix {
	return (*Matrix)(ptr)
}

// Native returns the underlying C source pointer.
func (m *Matrix) Native() unsafe.Pointer {
	return unsafe.Pointer(&m.native)
}

type Pattern struct {
	native C.cairo_pattern_t
}

// WrapPattern wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapPattern(ptr unsafe.Pointer) *Pattern {
	return (*Pattern)(ptr)
}

func marshalPattern(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*Pattern)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (p *Pattern) Native() unsafe.Pointer {
	return unsafe.Pointer(&p.native)
}

type Region struct {
	native C.cairo_region_t
}

// WrapRegion wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapRegion(ptr unsafe.Pointer) *Region {
	return (*Region)(ptr)
}

func marshalRegion(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*Region)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (r *Region) Native() unsafe.Pointer {
	return unsafe.Pointer(&r.native)
}

type FontOptions struct {
	native C.cairo_font_options_t
}

// WrapFontOptions wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapFontOptions(ptr unsafe.Pointer) *FontOptions {
	return (*FontOptions)(ptr)
}

func marshalFontOptions(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*FontOptions)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (f *FontOptions) Native() unsafe.Pointer {
	return unsafe.Pointer(&f.native)
}

type FontFace struct {
	native C.cairo_font_face_t
}

// WrapFontFace wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapFontFace(ptr unsafe.Pointer) *FontFace {
	return (*FontFace)(ptr)
}

func marshalFontFace(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*FontFace)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (f *FontFace) Native() unsafe.Pointer {
	return unsafe.Pointer(&f.native)
}

type ScaledFont struct {
	native C.cairo_scaled_font_t
}

// WrapScaledFont wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapScaledFont(ptr unsafe.Pointer) *ScaledFont {
	return (*ScaledFont)(ptr)
}

func marshalScaledFont(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*ScaledFont)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (s *ScaledFont) Native() unsafe.Pointer {
	return unsafe.Pointer(&s.native)
}

type Path struct {
	native C.cairo_path_t
}

// WrapPath wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapPath(ptr unsafe.Pointer) *Path {
	return (*Path)(ptr)
}

// Native returns the underlying C source pointer.
func (p *Path) Native() unsafe.Pointer {
	return unsafe.Pointer(&p.native)
}

type Rectangle struct {
	native C.cairo_rectangle_t
}

// WrapRectangle wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapRectangle(ptr unsafe.Pointer) *Rectangle {
	return (*Rectangle)(ptr)
}

func marshalRectangle(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*Rectangle)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (r *Rectangle) Native() unsafe.Pointer {
	return unsafe.Pointer(&r.native)
}

type RectangleInt struct {
	native C.cairo_rectangle_int_t
}

// WrapRectangleInt wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapRectangleInt(ptr unsafe.Pointer) *RectangleInt {
	return (*RectangleInt)(ptr)
}

func marshalRectangleInt(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return (*RectangleInt)(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (r *RectangleInt) Native() unsafe.Pointer {
	return unsafe.Pointer(&r.native)
}
