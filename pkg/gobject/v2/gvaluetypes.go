// Code generated by girgen. DO NOT EDIT.

package gobject

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/internal/box"
	"github.com/diamondburned/gotk4/pkg/glib/v2"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gobject-2.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <stdbool.h>
// #include <glib-object.h>
import "C"

func GTypeGetType() externglib.Type {
	ret := C.g_gtype_get_type()

	var ret0 externglib.Type

	ret0 = externglib.Type(ret)

	return ret0
}

// PointerTypeRegisterStatic creates a new G_TYPE_POINTER derived type id for a
// new pointer type with name @name.
func PointerTypeRegisterStatic(name string) externglib.Type {
	var arg1 *C.gchar

	arg1 = (*C.gchar)(C.CString(name))
	defer C.free(unsafe.Pointer(arg1))

	ret := C.g_pointer_type_register_static(arg1)

	var ret0 externglib.Type

	ret0 = externglib.Type(ret)

	return ret0
}

// StrdupValueContents: return a newly allocated string, which describes the
// contents of a #GValue. The main purpose of this function is to describe
// #GValue contents for debugging output, the way in which the contents are
// described may change between different GLib versions.
func StrdupValueContents(value *externglib.Value) string {
	var arg1 *C.GValue

	arg1 = (*C.GValue)(value.GValue)

	ret := C.g_strdup_value_contents(arg1)

	var ret0 string

	ret0 = C.GoString(ret)
	C.free(unsafe.Pointer(ret))

	return ret0
}
