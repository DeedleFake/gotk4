// Code generated by girgen. DO NOT EDIT.

package gobject

import (
	"unsafe"

	"github.com/diamondburned/gotk4/internal/box"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gobject-2.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
import "C"

// BoxedCopy: provide a copy of a boxed structure @src_boxed which is of type
// @boxed_type.
func BoxedCopy(boxedType externglib.Type, srcBoxed interface{}) interface{} {
	var arg1 C.GType
	var arg2 C.gpointer

	arg1 = C.GType(boxedType)
	arg2 = C.gpointer(box.Assign(srcBoxed))

	ret := C.g_boxed_copy(arg1, arg2)

	var ret0 interface{}

	ret0 = box.Get(uintptr(ret)).(interface{})

	return ret0
}

// BoxedFree: free the boxed structure @boxed which is of type @boxed_type.
func BoxedFree(boxedType externglib.Type, boxed interface{}) {
	var arg1 C.GType
	var arg2 C.gpointer

	arg1 = C.GType(boxedType)
	arg2 = C.gpointer(box.Assign(boxed))

	C.g_boxed_free(arg1, arg2)
}
