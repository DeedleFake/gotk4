// Code generated by girgen. DO NOT EDIT.

package pangoft

import (
	"github.com/diamondburned/gotk4/freetype"
	"github.com/diamondburned/gotk4/pango"
	"github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: pangoft2
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <pango/pangoft2.h>
import "C"

func init() {
	glib.RegisterGValueMarshalers([]glib.TypeMarshaler{

		// Objects/Classes
	})
}

// FontGetCoverage: gets the Coverage for a `PangoFT2Font`. Use
// pango_font_get_coverage() instead.
func FontGetCoverage(font *pango.Font, language *pango.Language) *pango.Coverage

// FontGetFace: returns the native FreeType2 `FT_Face` structure used for this
// Font. This may be useful if you want to use FreeType2 functions directly.
//
// Use pango_fc_font_lock_face() instead; when you are done with a face from
// pango_fc_font_lock_face() you must call pango_fc_font_unlock_face().
func FontGetFace(font *pango.Font) freetype.Face

// FontGetKerning: retrieves kerning information for a combination of two
// glyphs.
//
// Use pango_fc_font_kern_glyphs() instead.
func FontGetKerning(font *pango.Font, left pango.Glyph, right pango.Glyph) int

// GetContext: retrieves a `PangoContext` for the default PangoFT2 fontmap (see
// pango_ft2_font_map_for_display()) and sets the resolution for the default
// fontmap to @dpi_x by @dpi_y.
func GetContext(dpiX float64, dpiY float64) *pango.Context

// GetUnknownGlyph: return the index of a glyph suitable for drawing unknown
// characters with @font, or PANGO_GLYPH_EMPTY if no suitable glyph found.
//
// If you want to draw an unknown-box for a character that is not covered by the
// font, use PANGO_GET_UNKNOWN_GLYPH() instead.
func GetUnknownGlyph(font *pango.Font) pango.Glyph
