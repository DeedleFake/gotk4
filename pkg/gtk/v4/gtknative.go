// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/internal/gextras"
	"github.com/diamondburned/gotk4/pkg/gdk/v4"
	"github.com/diamondburned/gotk4/pkg/gsk/v4"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config:
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_native_get_type()), F: marshalNative},
	})
}

// Native is the interface implemented by all widgets that can provide a
// GdkSurface for widgets to render on.
//
// The obvious example of a Native is Window.
type Native interface {
	Widget

	// Renderer returns the renderer that is used for this Native.
	Renderer() gsk.Renderer
	// Surface returns the surface of this Native.
	Surface() gdk.Surface
	// SurfaceTransform retrieves the surface transform of @self. This is the
	// translation from @self's surface coordinates into @self's widget
	// coordinates.
	SurfaceTransform() (x float64, y float64)
	// Realize realizes a Native.
	Realize()
	// Unrealize unrealizes a Native.
	Unrealize()
}

// native implements the Native interface.
type native struct {
	Widget
}

var _ Native = (*native)(nil)

// WrapNative wraps a GObject to a type that implements interface
// Native. It is primarily used internally.
func WrapNative(obj *externglib.Object) Native {
	return Native{
		Widget: WrapWidget(obj),
	}
}

func marshalNative(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapNative(obj), nil
}

// Renderer returns the renderer that is used for this Native.
func (s native) Renderer() gsk.Renderer {
	var _arg0 *C.GtkNative

	_arg0 = (*C.GtkNative)(unsafe.Pointer(s.Native()))

	var _cret *C.GskRenderer

	cret = C.gtk_native_get_renderer(_arg0)

	var _renderer gsk.Renderer

	_renderer = gextras.CastObject(externglib.Take(unsafe.Pointer(_cret.Native()))).(gsk.Renderer)

	return _renderer
}

// Surface returns the surface of this Native.
func (s native) Surface() gdk.Surface {
	var _arg0 *C.GtkNative

	_arg0 = (*C.GtkNative)(unsafe.Pointer(s.Native()))

	var _cret *C.GdkSurface

	cret = C.gtk_native_get_surface(_arg0)

	var _surface gdk.Surface

	_surface = gextras.CastObject(externglib.Take(unsafe.Pointer(_cret.Native()))).(gdk.Surface)

	return _surface
}

// SurfaceTransform retrieves the surface transform of @self. This is the
// translation from @self's surface coordinates into @self's widget
// coordinates.
func (s native) SurfaceTransform() (x float64, y float64) {
	var _arg0 *C.GtkNative

	_arg0 = (*C.GtkNative)(unsafe.Pointer(s.Native()))

	var _arg1 C.double
	var _arg2 C.double

	C.gtk_native_get_surface_transform(_arg0, &_arg1, &_arg2)

	var _x float64
	var _y float64

	_x = (float64)(_arg1)
	_y = (float64)(_arg2)

	return _x, _y
}

// Realize realizes a Native.
func (s native) Realize() {
	var _arg0 *C.GtkNative

	_arg0 = (*C.GtkNative)(unsafe.Pointer(s.Native()))

	C.gtk_native_realize(_arg0)
}

// Unrealize unrealizes a Native.
func (s native) Unrealize() {
	var _arg0 *C.GtkNative

	_arg0 = (*C.GtkNative)(unsafe.Pointer(s.Native()))

	C.gtk_native_unrealize(_arg0)
}
