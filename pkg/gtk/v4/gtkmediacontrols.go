// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_media_controls_get_type()), F: marshalMediaControls},
	})
}

// MediaControls: `GtkMediaControls` is a widget to show controls for a video.
//
// !An example GtkMediaControls (media-controls.png)
//
// Usually, `GtkMediaControls` is used as part of [class@Gtk.Video].
type MediaControls interface {
	Widget

	// AsAccessible casts the class to the Accessible interface.
	AsAccessible() Accessible
	// AsBuildable casts the class to the Buildable interface.
	AsBuildable() Buildable
	// AsConstraintTarget casts the class to the ConstraintTarget interface.
	AsConstraintTarget() ConstraintTarget

	// MediaStream gets the media stream managed by @controls or nil if none.
	MediaStream() MediaStream
	// SetMediaStreamMediaControls sets the stream that is controlled by
	// @controls.
	SetMediaStreamMediaControls(stream MediaStream)
}

// mediaControls implements the MediaControls class.
type mediaControls struct {
	Widget
}

// WrapMediaControls wraps a GObject to the right type. It is
// primarily used internally.
func WrapMediaControls(obj *externglib.Object) MediaControls {
	return mediaControls{
		Widget: WrapWidget(obj),
	}
}

func marshalMediaControls(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapMediaControls(obj), nil
}

// NewMediaControls creates a new `GtkMediaControls` managing the @stream passed
// to it.
func NewMediaControls(stream MediaStream) MediaControls {
	var _arg1 *C.GtkMediaStream // out
	var _cret *C.GtkWidget      // in

	_arg1 = (*C.GtkMediaStream)(unsafe.Pointer(stream.Native()))

	_cret = C.gtk_media_controls_new(_arg1)

	var _mediaControls MediaControls // out

	_mediaControls = WrapMediaControls(externglib.Take(unsafe.Pointer(_cret)))

	return _mediaControls
}

func (c mediaControls) MediaStream() MediaStream {
	var _arg0 *C.GtkMediaControls // out
	var _cret *C.GtkMediaStream   // in

	_arg0 = (*C.GtkMediaControls)(unsafe.Pointer(c.Native()))

	_cret = C.gtk_media_controls_get_media_stream(_arg0)

	var _mediaStream MediaStream // out

	_mediaStream = gextras.CastObject(externglib.Take(unsafe.Pointer(_cret))).(MediaStream)

	return _mediaStream
}

func (c mediaControls) SetMediaStreamMediaControls(stream MediaStream) {
	var _arg0 *C.GtkMediaControls // out
	var _arg1 *C.GtkMediaStream   // out

	_arg0 = (*C.GtkMediaControls)(unsafe.Pointer(c.Native()))
	_arg1 = (*C.GtkMediaStream)(unsafe.Pointer(stream.Native()))

	C.gtk_media_controls_set_media_stream(_arg0, _arg1)
}

func (m mediaControls) AsAccessible() Accessible {
	return WrapAccessible(gextras.InternObject(m))
}

func (m mediaControls) AsBuildable() Buildable {
	return WrapBuildable(gextras.InternObject(m))
}

func (m mediaControls) AsConstraintTarget() ConstraintTarget {
	return WrapConstraintTarget(gextras.InternObject(m))
}
