// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/internal/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_media_controls_get_type()), F: marshalMediaControls},
	})
}

// MediaControls: `GtkMediaControls` is a widget to show controls for a video.
//
// !An example GtkMediaControls (media-controls.png)
//
// Usually, `GtkMediaControls` is used as part of [class@Gtk.Video].
type MediaControls interface {
	Widget
	Accessible
	Buildable
	ConstraintTarget

	// MediaStream gets the media stream managed by @controls or nil if none.
	MediaStream() MediaStream
	// SetMediaStream sets the stream that is controlled by @controls.
	SetMediaStream(stream MediaStream)
}

// mediaControls implements the MediaControls interface.
type mediaControls struct {
	Widget
	Accessible
	Buildable
	ConstraintTarget
}

var _ MediaControls = (*mediaControls)(nil)

// WrapMediaControls wraps a GObject to the right type. It is
// primarily used internally.
func WrapMediaControls(obj *externglib.Object) MediaControls {
	return MediaControls{
		Widget:           WrapWidget(obj),
		Accessible:       WrapAccessible(obj),
		Buildable:        WrapBuildable(obj),
		ConstraintTarget: WrapConstraintTarget(obj),
	}
}

func marshalMediaControls(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapMediaControls(obj), nil
}

// NewMediaControls constructs a class MediaControls.
func NewMediaControls(stream MediaStream) MediaControls {
	var arg1 *C.GtkMediaStream

	arg1 = (*C.GtkMediaStream)(stream.Native())

	ret := C.gtk_media_controls_new(arg1)

	var ret0 MediaControls

	ret0 = gextras.CastObject(externglib.Take(unsafe.Pointer(ret.Native()))).(MediaControls)

	return ret0
}

// MediaStream gets the media stream managed by @controls or nil if none.
func (c mediaControls) MediaStream() MediaStream {
	var arg0 *C.GtkMediaControls

	arg0 = (*C.GtkMediaControls)(c.Native())

	ret := C.gtk_media_controls_get_media_stream(arg0)

	var ret0 MediaStream

	ret0 = gextras.CastObject(externglib.Take(unsafe.Pointer(ret.Native()))).(MediaStream)

	return ret0
}

// SetMediaStream sets the stream that is controlled by @controls.
func (c mediaControls) SetMediaStream(stream MediaStream) {
	var arg0 *C.GtkMediaControls
	var arg1 *C.GtkMediaStream

	arg0 = (*C.GtkMediaControls)(c.Native())
	arg1 = (*C.GtkMediaStream)(stream.Native())

	C.gtk_media_controls_set_media_stream(arg0, arg1)
}
