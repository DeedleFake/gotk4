// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/internal/gextras"
	"github.com/diamondburned/gotk4/pkg/gdk/v4"
	"github.com/diamondburned/gotk4/pkg/gio/v2"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config:
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_mount_operation_get_type()), F: marshalMountOperation},
	})
}

// MountOperation: `GtkMountOperation` is an implementation of
// `GMountOperation`.
//
// The functions and objects described here make working with GTK and GIO more
// convenient.
//
// `GtkMountOperation` is needed when mounting volumes: It is an implementation
// of `GMountOperation` that can be used with GIO functions for mounting volumes
// such as g_file_mount_enclosing_volume(), g_file_mount_mountable(),
// g_volume_mount(), g_mount_unmount_with_operation() and others.
//
// When necessary, `GtkMountOperation` shows dialogs to let the user enter
// passwords, ask questions or show processes blocking unmount.
type MountOperation interface {
	gio.MountOperation

	// Display gets the display on which windows of the `GtkMountOperation` will
	// be shown.
	Display() gdk.Display
	// Parent gets the transient parent used by the `GtkMountOperation`.
	Parent() Window
	// IsShowing returns whether the `GtkMountOperation` is currently displaying
	// a window.
	IsShowing() bool
	// SetDisplay sets the display to show windows of the `GtkMountOperation`
	// on.
	SetDisplay(display gdk.Display)
	// SetParent sets the transient parent for windows shown by the
	// `GtkMountOperation`.
	SetParent(parent Window)
}

// mountOperation implements the MountOperation interface.
type mountOperation struct {
	gio.MountOperation
}

var _ MountOperation = (*mountOperation)(nil)

// WrapMountOperation wraps a GObject to the right type. It is
// primarily used internally.
func WrapMountOperation(obj *externglib.Object) MountOperation {
	return MountOperation{
		gio.MountOperation: gio.WrapMountOperation(obj),
	}
}

func marshalMountOperation(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapMountOperation(obj), nil
}

// NewMountOperation constructs a class MountOperation.
func NewMountOperation(parent Window) MountOperation {
	var arg1 *C.GtkWindow

	arg1 = (*C.GtkWindow)(unsafe.Pointer(parent.Native()))

	cret := new(C.GtkMountOperation)
	var goret MountOperation

	cret = C.gtk_mount_operation_new(arg1)

	goret = gextras.CastObject(externglib.AssumeOwnership(unsafe.Pointer(cret.Native()))).(MountOperation)

	return goret
}

// Display gets the display on which windows of the `GtkMountOperation` will
// be shown.
func (o mountOperation) Display() gdk.Display {
	var arg0 *C.GtkMountOperation

	arg0 = (*C.GtkMountOperation)(unsafe.Pointer(o.Native()))

	var cret *C.GdkDisplay
	var goret gdk.Display

	cret = C.gtk_mount_operation_get_display(arg0)

	goret = gextras.CastObject(externglib.Take(unsafe.Pointer(cret.Native()))).(gdk.Display)

	return goret
}

// Parent gets the transient parent used by the `GtkMountOperation`.
func (o mountOperation) Parent() Window {
	var arg0 *C.GtkMountOperation

	arg0 = (*C.GtkMountOperation)(unsafe.Pointer(o.Native()))

	var cret *C.GtkWindow
	var goret Window

	cret = C.gtk_mount_operation_get_parent(arg0)

	goret = gextras.CastObject(externglib.Take(unsafe.Pointer(cret.Native()))).(Window)

	return goret
}

// IsShowing returns whether the `GtkMountOperation` is currently displaying
// a window.
func (o mountOperation) IsShowing() bool {
	var arg0 *C.GtkMountOperation

	arg0 = (*C.GtkMountOperation)(unsafe.Pointer(o.Native()))

	var cret C.gboolean
	var goret bool

	cret = C.gtk_mount_operation_is_showing(arg0)

	if cret {
		goret = true
	}

	return goret
}

// SetDisplay sets the display to show windows of the `GtkMountOperation`
// on.
func (o mountOperation) SetDisplay(display gdk.Display) {
	var arg0 *C.GtkMountOperation
	var arg1 *C.GdkDisplay

	arg0 = (*C.GtkMountOperation)(unsafe.Pointer(o.Native()))
	arg1 = (*C.GdkDisplay)(unsafe.Pointer(display.Native()))

	C.gtk_mount_operation_set_display(arg0, arg1)
}

// SetParent sets the transient parent for windows shown by the
// `GtkMountOperation`.
func (o mountOperation) SetParent(parent Window) {
	var arg0 *C.GtkMountOperation
	var arg1 *C.GtkWindow

	arg0 = (*C.GtkMountOperation)(unsafe.Pointer(o.Native()))
	arg1 = (*C.GtkWindow)(unsafe.Pointer(parent.Native()))

	C.gtk_mount_operation_set_parent(arg0, arg1)
}
