// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_custom_layout_get_type()), F: marshalCustomLayout},
	})
}

// CustomLayout: `GtkCustomLayout` uses closures for size negotiation.
//
// A `GtkCustomLayout `uses closures matching to the old `GtkWidget` virtual
// functions for size negotiation, as a convenience API to ease the porting
// towards the corresponding `GtkLayoutManager virtual functions.
type CustomLayout interface {
	LayoutManager
}

// customLayout implements the CustomLayout class.
type customLayout struct {
	LayoutManager
}

// WrapCustomLayout wraps a GObject to the right type. It is
// primarily used internally.
func WrapCustomLayout(obj *externglib.Object) CustomLayout {
	return customLayout{
		LayoutManager: WrapLayoutManager(obj),
	}
}

func marshalCustomLayout(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapCustomLayout(obj), nil
}
