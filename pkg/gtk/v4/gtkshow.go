// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/gio/v2"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <gtk/gtk.h>
import "C"

// ShowURI: this function launches the default application for showing a given
// uri, or shows an error dialog if that fails.
func ShowURI(parent Window, uri string, timestamp uint32) {
	var arg1 *C.GtkWindow
	var arg2 *C.char
	var arg3 C.guint32

	arg1 = (*C.GtkWindow)(parent.Native())
	arg2 = (*C.gchar)(C.CString(uri))
	defer C.free(unsafe.Pointer(arg2))
	arg3 = C.guint32(timestamp)

	C.gtk_show_uri(arg1, arg2, arg3)
}

// ShowURIFull: this function launches the default application for showing a
// given uri.
//
// The @callback will be called when the launch is completed. It should call
// gtk_show_uri_full_finish() to obtain the result.
//
// This is the recommended call to be used as it passes information necessary
// for sandbox helpers to parent their dialogs properly.
func ShowURIFull(parent Window, uri string, timestamp uint32, cancellable gio.Cancellable, callback gio.AsyncReadyCallback) {
	var arg1 *C.GtkWindow
	var arg2 *C.char
	var arg3 C.guint32
	var arg4 *C.GCancellable
	var arg5 C.GAsyncReadyCallback
	var arg6 C.gpointer

	arg1 = (*C.GtkWindow)(parent.Native())
	arg2 = (*C.gchar)(C.CString(uri))
	defer C.free(unsafe.Pointer(arg2))
	arg3 = C.guint32(timestamp)
	arg4 = (*C.GCancellable)(cancellable.Native())

	C.gtk_show_uri_full(arg1, arg2, arg3, arg4, arg5, arg6)
}

// ShowURIFullFinish finishes the gtk_show_uri() call and returns the result of
// the operation.
func ShowURIFullFinish(parent Window, result gio.AsyncResult) error {
	var arg1 *C.GtkWindow
	var arg2 *C.GAsyncResult
	var gError *C.GError

	arg1 = (*C.GtkWindow)(parent.Native())
	arg2 = (*C.GAsyncResult)(result.Native())

	ret := C.gtk_show_uri_full_finish(arg1, arg2, &gError)

	var goError error

	if gError != nil {
		goError = fmt.Errorf("%d: %s", gError.code, C.GoString(gError.message))
		C.g_error_free(gError)
	}

	return goError
}
