// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_custom_filter_get_type()), F: marshalCustomFilter},
	})
}

// CustomFilter: `GtkCustomFilter` determines whether to include items with a
// callback.
type CustomFilter interface {
	Filter
}

// customFilter implements the CustomFilter class.
type customFilter struct {
	Filter
}

// WrapCustomFilter wraps a GObject to the right type. It is
// primarily used internally.
func WrapCustomFilter(obj *externglib.Object) CustomFilter {
	return customFilter{
		Filter: WrapFilter(obj),
	}
}

func marshalCustomFilter(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapCustomFilter(obj), nil
}
