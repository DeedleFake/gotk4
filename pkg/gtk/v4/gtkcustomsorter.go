// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_custom_sorter_get_type()), F: marshalCustomSorterrer},
	})
}

// CustomSorterrer describes CustomSorter's methods.
type CustomSorterrer interface {
	gextras.Objector

	privateCustomSorter()
}

// CustomSorter: `GtkCustomSorter` is a `GtkSorter` implementation that sorts
// via a callback function.
type CustomSorter struct {
	Sorter
}

var _ CustomSorterrer = (*CustomSorter)(nil)

func wrapCustomSorterrer(obj *externglib.Object) CustomSorterrer {
	return &CustomSorter{
		Sorter: Sorter{
			Object: obj,
		},
	}
}

func marshalCustomSorterrer(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapCustomSorterrer(obj), nil
}

func (*CustomSorter) privateCustomSorter() {}
