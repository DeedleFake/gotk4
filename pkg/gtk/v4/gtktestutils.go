// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <gtk/gtk.h>
import "C"

// TestListAllTypes: return the type ids that have been registered after calling
// gtk_test_register_all_types().
func TestListAllTypes() (nTypes uint, gTypes []externglib.Type) {
	var arg1 *C.guint // out

	ret := C.gtk_test_list_all_types(&arg1)

	var ret0 uint
	var ret1 []externglib.Type

	ret0 = uint(arg1)

	{
		ret1 = make([]externglib.Type, arg1)
		for i := 0; i < uintptr(arg1); i++ {
			src := (C.GType)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + i))
			ret1[i] = externglib.Type(src)
		}
	}

	return ret0, ret1
}

// TestRegisterAllTypes: force registration of all core GTK object types.
//
// This allowes to refer to any of those object types via g_type_from_name()
// after calling this function.
func TestRegisterAllTypes() {
	C.gtk_test_register_all_types()
}

// TestWidgetWaitForDraw enters the main loop and waits for @widget to be
// “drawn”.
//
// In this context that means it waits for the frame clock of @widget to have
// run a full styling, layout and drawing cycle.
//
// This function is intended to be used for syncing with actions that depend on
// @widget relayouting or on interaction with the display server.
func TestWidgetWaitForDraw(widget Widget) {
	var arg1 *C.GtkWidget

	arg1 = (*C.GtkWidget)(widget.Native())

	C.gtk_test_widget_wait_for_draw(arg1)
}
