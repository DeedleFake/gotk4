// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_flatten_list_model_get_type()), F: marshalFlattenListModeller},
	})
}

// FlattenListModeller describes FlattenListModel's methods.
type FlattenListModeller interface {
	gextras.Objector

	privateFlattenListModel()
}

// FlattenListModel: `GtkFlattenListModel` is a list model that concatenates
// other list models.
//
// `GtkFlattenListModel` takes a list model containing list models, and flattens
// it into a single model.
type FlattenListModel struct {
	*externglib.Object
}

var _ FlattenListModeller = (*FlattenListModel)(nil)

func wrapFlattenListModeller(obj *externglib.Object) FlattenListModeller {
	return &FlattenListModel{
		Object: obj,
	}
}

func marshalFlattenListModeller(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapFlattenListModeller(obj), nil
}

func (*FlattenListModel) privateFlattenListModel() {}
