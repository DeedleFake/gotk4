// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/internal/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config:
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_event_controller_motion_get_type()), F: marshalEventControllerMotion},
	})
}

// EventControllerMotion is an event controller meant for situations where you
// need to track the position of the pointer.
type EventControllerMotion interface {
	EventController

	// ContainsPointer returns the value of the
	// GtkEventControllerMotion:contains-pointer property.
	ContainsPointer() bool
	// IsPointer returns the value of the GtkEventControllerMotion:is-pointer
	// property.
	IsPointer() bool
}

// eventControllerMotion implements the EventControllerMotion interface.
type eventControllerMotion struct {
	EventController
}

var _ EventControllerMotion = (*eventControllerMotion)(nil)

// WrapEventControllerMotion wraps a GObject to the right type. It is
// primarily used internally.
func WrapEventControllerMotion(obj *externglib.Object) EventControllerMotion {
	return EventControllerMotion{
		EventController: WrapEventController(obj),
	}
}

func marshalEventControllerMotion(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapEventControllerMotion(obj), nil
}

// NewEventControllerMotion constructs a class EventControllerMotion.
func NewEventControllerMotion() EventControllerMotion {
	var cret C.GtkEventControllerMotion

	cret = C.gtk_event_controller_motion_new()

	var eventControllerMotion EventControllerMotion

	eventControllerMotion = gextras.CastObject(externglib.AssumeOwnership(unsafe.Pointer(cret.Native()))).(EventControllerMotion)

	return eventControllerMotion
}

// ContainsPointer returns the value of the
// GtkEventControllerMotion:contains-pointer property.
func (s eventControllerMotion) ContainsPointer() bool {
	var arg0 *C.GtkEventControllerMotion

	arg0 = (*C.GtkEventControllerMotion)(unsafe.Pointer(s.Native()))

	var cret C.gboolean

	cret = C.gtk_event_controller_motion_contains_pointer(arg0)

	var ok bool

	if cret {
		ok = true
	}

	return ok
}

// IsPointer returns the value of the GtkEventControllerMotion:is-pointer
// property.
func (s eventControllerMotion) IsPointer() bool {
	var arg0 *C.GtkEventControllerMotion

	arg0 = (*C.GtkEventControllerMotion)(unsafe.Pointer(s.Native()))

	var cret C.gboolean

	cret = C.gtk_event_controller_motion_is_pointer(arg0)

	var ok bool

	if cret {
		ok = true
	}

	return ok
}
