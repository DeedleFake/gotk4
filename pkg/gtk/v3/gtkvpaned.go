// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0 glib-2.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_vpaned_get_type()), F: marshalVPaned},
	})
}

// VPaned: the VPaned widget is a container widget with two children arranged
// vertically. The division between the two panes is adjustable by the user by
// dragging a handle. See Paned for details.
//
// GtkVPaned has been deprecated, use Paned instead.
type VPaned interface {
	Paned
	Buildable
	Orientable
}

// vPaned implements the VPaned interface.
type vPaned struct {
	Paned
	Buildable
	Orientable
}

var _ VPaned = (*vPaned)(nil)

// WrapVPaned wraps a GObject to the right type. It is
// primarily used internally.
func WrapVPaned(obj *externglib.Object) VPaned {
	return VPaned{
		Paned:      WrapPaned(obj),
		Buildable:  WrapBuildable(obj),
		Orientable: WrapOrientable(obj),
	}
}

func marshalVPaned(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapVPaned(obj), nil
}
