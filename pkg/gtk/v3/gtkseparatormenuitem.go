// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/internal/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config:
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_separator_menu_item_get_type()), F: marshalSeparatorMenuItem},
	})
}

// SeparatorMenuItem: the SeparatorMenuItem is a separator used to group items
// within a menu. It displays a horizontal line with a shadow to make it appear
// sunken into the interface.
//
//
// CSS nodes
//
// GtkSeparatorMenuItem has a single CSS node with name separator.
type SeparatorMenuItem interface {
	MenuItem
	Actionable
	Activatable
	Buildable
}

// separatorMenuItem implements the SeparatorMenuItem interface.
type separatorMenuItem struct {
	MenuItem
	Actionable
	Activatable
	Buildable
}

var _ SeparatorMenuItem = (*separatorMenuItem)(nil)

// WrapSeparatorMenuItem wraps a GObject to the right type. It is
// primarily used internally.
func WrapSeparatorMenuItem(obj *externglib.Object) SeparatorMenuItem {
	return SeparatorMenuItem{
		MenuItem:    WrapMenuItem(obj),
		Actionable:  WrapActionable(obj),
		Activatable: WrapActivatable(obj),
		Buildable:   WrapBuildable(obj),
	}
}

func marshalSeparatorMenuItem(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapSeparatorMenuItem(obj), nil
}

// NewSeparatorMenuItem constructs a class SeparatorMenuItem.
func NewSeparatorMenuItem() SeparatorMenuItem {
	var cret C.GtkSeparatorMenuItem
	var ret1 SeparatorMenuItem

	cret = C.gtk_separator_menu_item_new()

	ret1 = gextras.CastObject(externglib.Take(unsafe.Pointer(cret.Native()))).(SeparatorMenuItem)

	return ret1
}
