// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_arrow_accessible_get_type()), F: marshalArrowAccessible},
	})
}

type ArrowAccessible interface {
	gextras.Objector

	privateArrowAccessibleClass()
}

// ArrowAccessibleClass implements the ArrowAccessible interface.
type ArrowAccessibleClass struct {
	WidgetAccessibleClass
	atk.ImageIface
}

var _ ArrowAccessible = (*ArrowAccessibleClass)(nil)

func wrapArrowAccessible(obj *externglib.Object) ArrowAccessible {
	return &ArrowAccessibleClass{
		WidgetAccessibleClass: WidgetAccessibleClass{
			AccessibleClass: AccessibleClass{
				ObjectClass: atk.ObjectClass{
					Object: obj,
				},
			},
		},
		ImageIface: atk.ImageIface{
			Object: obj,
		},
	}
}

func marshalArrowAccessible(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapArrowAccessible(obj), nil
}

func (*ArrowAccessibleClass) privateArrowAccessibleClass() {}
