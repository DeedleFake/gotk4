// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config:
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_tool_shell_get_type()), F: marshalToolShell},
	})
}

// ToolShellOverrider contains methods that are overridable. This
// interface is a subset of the interface ToolShell.
type ToolShellOverrider interface {
	// EllipsizeMode retrieves the current ellipsize mode for the tool shell.
	// Tool items must not call this function directly, but rely on
	// gtk_tool_item_get_ellipsize_mode() instead.
	EllipsizeMode(s ToolShell)

	IconSize(s ToolShell)
	// Orientation retrieves the current orientation for the tool shell. Tool
	// items must not call this function directly, but rely on
	// gtk_tool_item_get_orientation() instead.
	Orientation(s ToolShell)
	// ReliefStyle returns the relief style of buttons on @shell. Tool items
	// must not call this function directly, but rely on
	// gtk_tool_item_get_relief_style() instead.
	ReliefStyle(s ToolShell)
	// Style retrieves whether the tool shell has text, icons, or both. Tool
	// items must not call this function directly, but rely on
	// gtk_tool_item_get_toolbar_style() instead.
	Style(s ToolShell)
	// TextAlignment retrieves the current text alignment for the tool shell.
	// Tool items must not call this function directly, but rely on
	// gtk_tool_item_get_text_alignment() instead.
	TextAlignment(s ToolShell)
	// TextOrientation retrieves the current text orientation for the tool
	// shell. Tool items must not call this function directly, but rely on
	// gtk_tool_item_get_text_orientation() instead.
	TextOrientation(s ToolShell)
	// TextSizeGroup retrieves the current text size group for the tool shell.
	// Tool items must not call this function directly, but rely on
	// gtk_tool_item_get_text_size_group() instead.
	TextSizeGroup(s ToolShell)
	// RebuildMenu: calling this function signals the tool shell that the
	// overflow menu item for tool items have changed. If there is an overflow
	// menu and if it is visible when this function it called, the menu will be
	// rebuilt.
	//
	// Tool items must not call this function directly, but rely on
	// gtk_tool_item_rebuild_menu() instead.
	RebuildMenu(s ToolShell)
}

// ToolShell: the ToolShell interface allows container widgets to provide
// additional information when embedding ToolItem widgets.
type ToolShell interface {
	Widget
	ToolShellOverrider
}

// toolShell implements the ToolShell interface.
type toolShell struct {
	Widget
}

var _ ToolShell = (*toolShell)(nil)

// WrapToolShell wraps a GObject to a type that implements interface
// ToolShell. It is primarily used internally.
func WrapToolShell(obj *externglib.Object) ToolShell {
	return ToolShell{
		Widget: WrapWidget(obj),
	}
}

func marshalToolShell(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapToolShell(obj), nil
}

// EllipsizeMode retrieves the current ellipsize mode for the tool shell.
// Tool items must not call this function directly, but rely on
// gtk_tool_item_get_ellipsize_mode() instead.
func (s toolShell) EllipsizeMode(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_get_ellipsize_mode(arg0)
}

// IconSize retrieves the icon size for the tool shell. Tool items must not
// call this function directly, but rely on gtk_tool_item_get_icon_size()
// instead.
func (s toolShell) IconSize(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_get_icon_size(arg0)
}

// Orientation retrieves the current orientation for the tool shell. Tool
// items must not call this function directly, but rely on
// gtk_tool_item_get_orientation() instead.
func (s toolShell) Orientation(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_get_orientation(arg0)
}

// ReliefStyle returns the relief style of buttons on @shell. Tool items
// must not call this function directly, but rely on
// gtk_tool_item_get_relief_style() instead.
func (s toolShell) ReliefStyle(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_get_relief_style(arg0)
}

// Style retrieves whether the tool shell has text, icons, or both. Tool
// items must not call this function directly, but rely on
// gtk_tool_item_get_toolbar_style() instead.
func (s toolShell) Style(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_get_style(arg0)
}

// TextAlignment retrieves the current text alignment for the tool shell.
// Tool items must not call this function directly, but rely on
// gtk_tool_item_get_text_alignment() instead.
func (s toolShell) TextAlignment(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_get_text_alignment(arg0)
}

// TextOrientation retrieves the current text orientation for the tool
// shell. Tool items must not call this function directly, but rely on
// gtk_tool_item_get_text_orientation() instead.
func (s toolShell) TextOrientation(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_get_text_orientation(arg0)
}

// TextSizeGroup retrieves the current text size group for the tool shell.
// Tool items must not call this function directly, but rely on
// gtk_tool_item_get_text_size_group() instead.
func (s toolShell) TextSizeGroup(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_get_text_size_group(arg0)
}

// RebuildMenu: calling this function signals the tool shell that the
// overflow menu item for tool items have changed. If there is an overflow
// menu and if it is visible when this function it called, the menu will be
// rebuilt.
//
// Tool items must not call this function directly, but rely on
// gtk_tool_item_rebuild_menu() instead.
func (s toolShell) RebuildMenu(s ToolShell) {
	var arg0 *C.GtkToolShell

	arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_rebuild_menu(arg0)
}
