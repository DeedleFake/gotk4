// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0 glib-2.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_tool_shell_get_type()), F: marshalToolShell},
	})
}

// ToolShellOverrider contains methods that are overridable. This
// interface is a subset of the interface ToolShell.
type ToolShellOverrider interface {
	// TextAlignment retrieves the current text alignment for the tool shell.
	// Tool items must not call this function directly, but rely on
	// gtk_tool_item_get_text_alignment() instead.
	TextAlignment() float32
	// RebuildMenu: calling this function signals the tool shell that the
	// overflow menu item for tool items have changed. If there is an overflow
	// menu and if it is visible when this function it called, the menu will be
	// rebuilt.
	//
	// Tool items must not call this function directly, but rely on
	// gtk_tool_item_rebuild_menu() instead.
	RebuildMenu()
}

// ToolShell: the ToolShell interface allows container widgets to provide
// additional information when embedding ToolItem widgets.
type ToolShell interface {
	Widget
	ToolShellOverrider

	// IconSize retrieves the icon size for the tool shell. Tool items must not
	// call this function directly, but rely on gtk_tool_item_get_icon_size()
	// instead.
	IconSize() int
}

// toolShell implements the ToolShell interface.
type toolShell struct {
	Widget
}

var _ ToolShell = (*toolShell)(nil)

// WrapToolShell wraps a GObject to a type that implements interface
// ToolShell. It is primarily used internally.
func WrapToolShell(obj *externglib.Object) ToolShell {
	return ToolShell{
		Widget: WrapWidget(obj),
	}
}

func marshalToolShell(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapToolShell(obj), nil
}

// IconSize retrieves the icon size for the tool shell. Tool items must not
// call this function directly, but rely on gtk_tool_item_get_icon_size()
// instead.
func (s toolShell) IconSize() int {
	var _arg0 *C.GtkToolShell // out

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	var _cret C.GtkIconSize // in

	_cret = C.gtk_tool_shell_get_icon_size(_arg0)

	var _gint int // out

	_gint = (int)(_cret)

	return _gint
}

// TextAlignment retrieves the current text alignment for the tool shell.
// Tool items must not call this function directly, but rely on
// gtk_tool_item_get_text_alignment() instead.
func (s toolShell) TextAlignment() float32 {
	var _arg0 *C.GtkToolShell // out

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	var _cret C.gfloat // in

	_cret = C.gtk_tool_shell_get_text_alignment(_arg0)

	var _gfloat float32 // out

	_gfloat = (float32)(_cret)

	return _gfloat
}

// RebuildMenu: calling this function signals the tool shell that the
// overflow menu item for tool items have changed. If there is an overflow
// menu and if it is visible when this function it called, the menu will be
// rebuilt.
//
// Tool items must not call this function directly, but rely on
// gtk_tool_item_rebuild_menu() instead.
func (s toolShell) RebuildMenu() {
	var _arg0 *C.GtkToolShell // out

	_arg0 = (*C.GtkToolShell)(unsafe.Pointer(s.Native()))

	C.gtk_tool_shell_rebuild_menu(_arg0)
}
