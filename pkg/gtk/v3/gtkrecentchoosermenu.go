// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/core/gerror"
	"github.com/diamondburned/gotk4/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_recent_chooser_menu_get_type()), F: marshalRecentChooserMenu},
	})
}

// RecentChooserMenu is a widget suitable for displaying recently used files
// inside a menu. It can be used to set a sub-menu of a MenuItem using
// gtk_menu_item_set_submenu(), or as the menu of a MenuToolButton.
//
// Note that RecentChooserMenu does not have any methods of its own. Instead,
// you should use the functions that work on a RecentChooser.
//
// Note also that RecentChooserMenu does not support multiple filters, as it has
// no way to let the user choose between them as the RecentChooserWidget and
// RecentChooserDialog widgets do. Thus using gtk_recent_chooser_add_filter() on
// a RecentChooserMenu widget will yield the same effects as using
// gtk_recent_chooser_set_filter(), replacing any currently set filter with the
// supplied filter; gtk_recent_chooser_remove_filter() will remove any currently
// set RecentFilter object and will unset the current filter;
// gtk_recent_chooser_list_filters() will return a list containing a single
// RecentFilter object.
//
// Recently used files are supported since GTK+ 2.10.
type RecentChooserMenu interface {
	Menu
	Activatable
	RecentChooser

	// ShowNumbers:
	ShowNumbers() bool
	// SetShowNumbersRecentChooserMenu:
	SetShowNumbersRecentChooserMenu(showNumbers bool)
}

// recentChooserMenu implements the RecentChooserMenu class.
type recentChooserMenu struct {
	Menu
}

// WrapRecentChooserMenu wraps a GObject to the right type. It is
// primarily used internally.
func WrapRecentChooserMenu(obj *externglib.Object) RecentChooserMenu {
	return recentChooserMenu{
		Menu: WrapMenu(obj),
	}
}

func marshalRecentChooserMenu(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapRecentChooserMenu(obj), nil
}

// NewRecentChooserMenu:
func NewRecentChooserMenu() RecentChooserMenu {
	var _cret *C.GtkWidget // in

	_cret = C.gtk_recent_chooser_menu_new()

	var _recentChooserMenu RecentChooserMenu // out

	_recentChooserMenu = gextras.CastObject(externglib.Take(unsafe.Pointer(_cret))).(RecentChooserMenu)

	return _recentChooserMenu
}

// NewRecentChooserMenuForManager:
func NewRecentChooserMenuForManager(manager RecentManager) RecentChooserMenu {
	var _arg1 *C.GtkRecentManager // out
	var _cret *C.GtkWidget        // in

	_arg1 = (*C.GtkRecentManager)(unsafe.Pointer(manager.Native()))

	_cret = C.gtk_recent_chooser_menu_new_for_manager(_arg1)

	var _recentChooserMenu RecentChooserMenu // out

	_recentChooserMenu = gextras.CastObject(externglib.Take(unsafe.Pointer(_cret))).(RecentChooserMenu)

	return _recentChooserMenu
}

func (m recentChooserMenu) ShowNumbers() bool {
	var _arg0 *C.GtkRecentChooserMenu // out
	var _cret C.gboolean              // in

	_arg0 = (*C.GtkRecentChooserMenu)(unsafe.Pointer(m.Native()))

	_cret = C.gtk_recent_chooser_menu_get_show_numbers(_arg0)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

func (m recentChooserMenu) SetShowNumbersRecentChooserMenu(showNumbers bool) {
	var _arg0 *C.GtkRecentChooserMenu // out
	var _arg1 C.gboolean              // out

	_arg0 = (*C.GtkRecentChooserMenu)(unsafe.Pointer(m.Native()))
	if showNumbers {
		_arg1 = C.TRUE
	}

	C.gtk_recent_chooser_menu_set_show_numbers(_arg0, _arg1)
}

func (b recentChooserMenu) AddChild(builder Builder, child gextras.Objector, typ string) {
	WrapBuildable(gextras.InternObject(b)).AddChild(builder, child, typ)
}

func (b recentChooserMenu) ConstructChild(builder Builder, name string) gextras.Objector {
	return WrapBuildable(gextras.InternObject(b)).ConstructChild(builder, name)
}

func (b recentChooserMenu) InternalChild(builder Builder, childname string) gextras.Objector {
	return WrapBuildable(gextras.InternObject(b)).InternalChild(builder, childname)
}

func (b recentChooserMenu) Name() string {
	return WrapBuildable(gextras.InternObject(b)).Name()
}

func (b recentChooserMenu) ParserFinished(builder Builder) {
	WrapBuildable(gextras.InternObject(b)).ParserFinished(builder)
}

func (b recentChooserMenu) SetBuildableProperty(builder Builder, name string, value externglib.Value) {
	WrapBuildable(gextras.InternObject(b)).SetBuildableProperty(builder, name, value)
}

func (b recentChooserMenu) SetName(name string) {
	WrapBuildable(gextras.InternObject(b)).SetName(name)
}

func (a recentChooserMenu) DoSetRelatedAction(action Action) {
	WrapActivatable(gextras.InternObject(a)).DoSetRelatedAction(action)
}

func (a recentChooserMenu) RelatedAction() Action {
	return WrapActivatable(gextras.InternObject(a)).RelatedAction()
}

func (a recentChooserMenu) UseActionAppearance() bool {
	return WrapActivatable(gextras.InternObject(a)).UseActionAppearance()
}

func (a recentChooserMenu) SetRelatedAction(action Action) {
	WrapActivatable(gextras.InternObject(a)).SetRelatedAction(action)
}

func (a recentChooserMenu) SetUseActionAppearance(useAppearance bool) {
	WrapActivatable(gextras.InternObject(a)).SetUseActionAppearance(useAppearance)
}

func (a recentChooserMenu) SyncActionProperties(action Action) {
	WrapActivatable(gextras.InternObject(a)).SyncActionProperties(action)
}

func (c recentChooserMenu) AddFilter(filter RecentFilter) {
	WrapRecentChooser(gextras.InternObject(c)).AddFilter(filter)
}

func (c recentChooserMenu) CurrentItem() *RecentInfo {
	return WrapRecentChooser(gextras.InternObject(c)).CurrentItem()
}

func (c recentChooserMenu) CurrentURI() string {
	return WrapRecentChooser(gextras.InternObject(c)).CurrentURI()
}

func (c recentChooserMenu) Filter() RecentFilter {
	return WrapRecentChooser(gextras.InternObject(c)).Filter()
}

func (c recentChooserMenu) Limit() int {
	return WrapRecentChooser(gextras.InternObject(c)).Limit()
}

func (c recentChooserMenu) LocalOnly() bool {
	return WrapRecentChooser(gextras.InternObject(c)).LocalOnly()
}

func (c recentChooserMenu) SelectMultiple() bool {
	return WrapRecentChooser(gextras.InternObject(c)).SelectMultiple()
}

func (c recentChooserMenu) ShowIcons() bool {
	return WrapRecentChooser(gextras.InternObject(c)).ShowIcons()
}

func (c recentChooserMenu) ShowNotFound() bool {
	return WrapRecentChooser(gextras.InternObject(c)).ShowNotFound()
}

func (c recentChooserMenu) ShowPrivate() bool {
	return WrapRecentChooser(gextras.InternObject(c)).ShowPrivate()
}

func (c recentChooserMenu) ShowTips() bool {
	return WrapRecentChooser(gextras.InternObject(c)).ShowTips()
}

func (c recentChooserMenu) SortType() RecentSortType {
	return WrapRecentChooser(gextras.InternObject(c)).SortType()
}

func (c recentChooserMenu) RemoveFilter(filter RecentFilter) {
	WrapRecentChooser(gextras.InternObject(c)).RemoveFilter(filter)
}

func (c recentChooserMenu) SelectAll() {
	WrapRecentChooser(gextras.InternObject(c)).SelectAll()
}

func (c recentChooserMenu) SelectURI(uri string) error {
	return WrapRecentChooser(gextras.InternObject(c)).SelectURI(uri)
}

func (c recentChooserMenu) SetCurrentURI(uri string) error {
	return WrapRecentChooser(gextras.InternObject(c)).SetCurrentURI(uri)
}

func (c recentChooserMenu) SetFilter(filter RecentFilter) {
	WrapRecentChooser(gextras.InternObject(c)).SetFilter(filter)
}

func (c recentChooserMenu) SetLimit(limit int) {
	WrapRecentChooser(gextras.InternObject(c)).SetLimit(limit)
}

func (c recentChooserMenu) SetLocalOnly(localOnly bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetLocalOnly(localOnly)
}

func (c recentChooserMenu) SetSelectMultiple(selectMultiple bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetSelectMultiple(selectMultiple)
}

func (c recentChooserMenu) SetShowIcons(showIcons bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetShowIcons(showIcons)
}

func (c recentChooserMenu) SetShowNotFound(showNotFound bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetShowNotFound(showNotFound)
}

func (c recentChooserMenu) SetShowPrivate(showPrivate bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetShowPrivate(showPrivate)
}

func (c recentChooserMenu) SetShowTips(showTips bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetShowTips(showTips)
}

func (c recentChooserMenu) SetSortType(sortType RecentSortType) {
	WrapRecentChooser(gextras.InternObject(c)).SetSortType(sortType)
}

func (c recentChooserMenu) UnselectAll() {
	WrapRecentChooser(gextras.InternObject(c)).UnselectAll()
}

func (c recentChooserMenu) UnselectURI(uri string) {
	WrapRecentChooser(gextras.InternObject(c)).UnselectURI(uri)
}
