// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_font_chooser_dialog_get_type()), F: marshalFontChooserDialog},
	})
}

// FontChooserDialog: the FontChooserDialog widget is a dialog for selecting a
// font. It implements the FontChooser interface.
//
//
// GtkFontChooserDialog as GtkBuildable
//
// The GtkFontChooserDialog implementation of the Buildable interface exposes
// the buttons with the names “select_button” and “cancel_button”.
type FontChooserDialog interface {
	gextras.Objector

	privateFontChooserDialogClass()
}

// FontChooserDialogClass implements the FontChooserDialog interface.
type FontChooserDialogClass struct {
	*externglib.Object
	DialogClass
	BuildableInterface
	FontChooserInterface
}

var _ FontChooserDialog = (*FontChooserDialogClass)(nil)

func wrapFontChooserDialog(obj *externglib.Object) FontChooserDialog {
	return &FontChooserDialogClass{
		Object: obj,
		DialogClass: DialogClass{
			Object: obj,
			WindowClass: WindowClass{
				Object: obj,
				BinClass: BinClass{
					Object: obj,
					ContainerClass: ContainerClass{
						Object: obj,
						WidgetClass: WidgetClass{
							Object:           obj,
							InitiallyUnowned: externglib.InitiallyUnowned{Object: obj},
							BuildableInterface: BuildableInterface{
								Object: obj,
							},
						},
						BuildableInterface: BuildableInterface{
							Object: obj,
						},
					},
					BuildableInterface: BuildableInterface{
						Object: obj,
					},
				},
				BuildableInterface: BuildableInterface{
					Object: obj,
				},
			},
			BuildableInterface: BuildableInterface{
				Object: obj,
			},
		},
		BuildableInterface: BuildableInterface{
			Object: obj,
		},
		FontChooserInterface: FontChooserInterface{
			Object: obj,
		},
	}
}

func marshalFontChooserDialog(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapFontChooserDialog(obj), nil
}

// NewFontChooserDialog creates a new FontChooserDialog.
func NewFontChooserDialog(title string, parent Window) FontChooserDialog {
	var _arg1 *C.gchar     // out
	var _arg2 *C.GtkWindow // out
	var _cret *C.GtkWidget // in

	_arg1 = (*C.gchar)(C.CString(title))
	defer C.free(unsafe.Pointer(_arg1))
	_arg2 = (*C.GtkWindow)(unsafe.Pointer(parent.Native()))

	_cret = C.gtk_font_chooser_dialog_new(_arg1, _arg2)

	var _fontChooserDialog FontChooserDialog // out

	_fontChooserDialog = gextras.CastObject(externglib.Take(unsafe.Pointer(_cret))).(FontChooserDialog)

	return _fontChooserDialog
}

func (*FontChooserDialogClass) privateFontChooserDialogClass() {}
