// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_file_chooser_widget_get_type()), F: marshalFileChooserWidget},
	})
}

// FileChooserWidget is a widget for choosing files. It exposes the FileChooser
// interface, and you should use the methods of this interface to interact with
// the widget.
//
//
// CSS nodes
//
// GtkFileChooserWidget has a single CSS node with name filechooser.
type FileChooserWidget interface {
	Box

	// AsBuildable casts the class to the Buildable interface.
	AsBuildable() Buildable
	// AsFileChooser casts the class to the FileChooser interface.
	AsFileChooser() FileChooser
	// AsOrientable casts the class to the Orientable interface.
	AsOrientable() Orientable
}

// fileChooserWidget implements the FileChooserWidget class.
type fileChooserWidget struct {
	Box
}

// WrapFileChooserWidget wraps a GObject to the right type. It is
// primarily used internally.
func WrapFileChooserWidget(obj *externglib.Object) FileChooserWidget {
	return fileChooserWidget{
		Box: WrapBox(obj),
	}
}

func marshalFileChooserWidget(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapFileChooserWidget(obj), nil
}

// NewFileChooserWidget creates a new FileChooserWidget. This is a file chooser
// widget that can be embedded in custom windows, and it is the same widget that
// is used by FileChooserDialog.
func NewFileChooserWidget(action FileChooserAction) FileChooserWidget {
	var _arg1 C.GtkFileChooserAction // out
	var _cret *C.GtkWidget           // in

	_arg1 = C.GtkFileChooserAction(action)

	_cret = C.gtk_file_chooser_widget_new(_arg1)

	var _fileChooserWidget FileChooserWidget // out

	_fileChooserWidget = WrapFileChooserWidget(externglib.Take(unsafe.Pointer(_cret)))

	return _fileChooserWidget
}

func (f fileChooserWidget) AsBuildable() Buildable {
	return WrapBuildable(gextras.InternObject(f))
}

func (f fileChooserWidget) AsFileChooser() FileChooser {
	return WrapFileChooser(gextras.InternObject(f))
}

func (f fileChooserWidget) AsOrientable() Orientable {
	return WrapOrientable(gextras.InternObject(f))
}
