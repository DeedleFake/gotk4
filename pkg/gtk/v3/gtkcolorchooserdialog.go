// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_color_chooser_dialog_get_type()), F: marshalColorChooserDialoger},
	})
}

// ColorChooserDialoger describes ColorChooserDialog's methods.
type ColorChooserDialoger interface {
	privateColorChooserDialog()
}

// ColorChooserDialog widget is a dialog for choosing a color. It implements the
// ColorChooser interface.
type ColorChooserDialog struct {
	Dialog

	ColorChooser
}

var (
	_ ColorChooserDialoger = (*ColorChooserDialog)(nil)
	_ gextras.Nativer      = (*ColorChooserDialog)(nil)
)

func wrapColorChooserDialog(obj *externglib.Object) ColorChooserDialoger {
	return &ColorChooserDialog{
		Dialog: Dialog{
			Window: Window{
				Bin: Bin{
					Container: Container{
						Widget: Widget{
							InitiallyUnowned: externglib.InitiallyUnowned{
								Object: obj,
							},
							ImplementorIface: atk.ImplementorIface{
								Object: obj,
							},
							Buildable: Buildable{
								Object: obj,
							},
						},
					},
				},
			},
		},
		ColorChooser: ColorChooser{
			Object: obj,
		},
	}
}

func marshalColorChooserDialoger(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapColorChooserDialog(obj), nil
}

// NewColorChooserDialog creates a new ColorChooserDialog.
func NewColorChooserDialog(title string, parent Windower) *ColorChooserDialog {
	var _arg1 *C.gchar     // out
	var _arg2 *C.GtkWindow // out
	var _cret *C.GtkWidget // in

	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(title)))
	defer C.free(unsafe.Pointer(_arg1))
	_arg2 = (*C.GtkWindow)(unsafe.Pointer((parent).(gextras.Nativer).Native()))

	_cret = C.gtk_color_chooser_dialog_new(_arg1, _arg2)

	var _colorChooserDialog *ColorChooserDialog // out

	_colorChooserDialog = (gextras.CastObject(externglib.Take(unsafe.Pointer(_cret)))).(*ColorChooserDialog)

	return _colorChooserDialog
}

// Native implements gextras.Nativer. It returns the underlying GObject
// field.
func (v *ColorChooserDialog) Native() uintptr {
	return v.Dialog.Window.Bin.Container.Widget.InitiallyUnowned.Object.Native()
}

func (*ColorChooserDialog) privateColorChooserDialog() {}
