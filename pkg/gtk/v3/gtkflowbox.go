// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/internal/box"
	"github.com/diamondburned/gotk4/internal/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
//
// extern GtkWidget* gotk4_FlowBoxCreateWidgetFunc(gpointer _0, gpointer _1);
// extern gboolean gotk4_FlowBoxFilterFunc(GtkFlowBoxChild* _0, gpointer _1);
// extern void gotk4_FlowBoxForeachFunc(GtkFlowBox* _0, GtkFlowBoxChild* _1, gpointer _2);
// extern gint gotk4_FlowBoxSortFunc(GtkFlowBoxChild* _0, GtkFlowBoxChild* _1, gpointer _2);
import "C"

// FlowBoxCreateWidgetFunc: called for flow boxes that are bound to a Model with
// gtk_flow_box_bind_model() for each item that gets added to the model.
type FlowBoxCreateWidgetFunc func(item gextras.Objector) Widget

//export gotk4_FlowBoxCreateWidgetFunc
func gotk4_FlowBoxCreateWidgetFunc(arg0 C.gpointer, arg1 C.gpointer) *C.GtkWidget {
	v := box.Get(uintptr(arg1))
	if v == nil {
		panic(`callback not found`)
	}

	var item gextras.Objector

	item = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(gextras.Objector)

	widget := v.(FlowBoxCreateWidgetFunc)(item)
}

// FlowBoxFilterFunc: a function that will be called whenrever a child changes
// or is added. It lets you control if the child should be visible or not.
type FlowBoxFilterFunc func(child FlowBoxChild) bool

//export gotk4_FlowBoxFilterFunc
func gotk4_FlowBoxFilterFunc(arg0 *C.GtkFlowBoxChild, arg1 C.gpointer) C.gboolean {
	v := box.Get(uintptr(arg1))
	if v == nil {
		panic(`callback not found`)
	}

	var child FlowBoxChild

	child = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(FlowBoxChild)

	ok := v.(FlowBoxFilterFunc)(child)
}

// FlowBoxForeachFunc: a function used by gtk_flow_box_selected_foreach(). It
// will be called on every selected child of the @box.
type FlowBoxForeachFunc func(box FlowBox, child FlowBoxChild)

//export gotk4_FlowBoxForeachFunc
func gotk4_FlowBoxForeachFunc(arg0 *C.GtkFlowBox, arg1 *C.GtkFlowBoxChild, arg2 C.gpointer) {
	v := box.Get(uintptr(arg2))
	if v == nil {
		panic(`callback not found`)
	}

	var box FlowBox
	var child FlowBoxChild

	box = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(FlowBox)

	child = gextras.CastObject(externglib.Take(unsafe.Pointer(arg1.Native()))).(FlowBoxChild)

	v.(FlowBoxForeachFunc)(box, child)
}

// FlowBoxSortFunc: a function to compare two children to determine which should
// come first.
type FlowBoxSortFunc func(child1 FlowBoxChild, child2 FlowBoxChild) int

//export gotk4_FlowBoxSortFunc
func gotk4_FlowBoxSortFunc(arg0 *C.GtkFlowBoxChild, arg1 *C.GtkFlowBoxChild, arg2 C.gpointer) C.gint {
	v := box.Get(uintptr(arg2))
	if v == nil {
		panic(`callback not found`)
	}

	var child1 FlowBoxChild
	var child2 FlowBoxChild

	child1 = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(FlowBoxChild)

	child2 = gextras.CastObject(externglib.Take(unsafe.Pointer(arg1.Native()))).(FlowBoxChild)

	gint := v.(FlowBoxSortFunc)(child1, child2)
}
