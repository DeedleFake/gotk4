// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

// HeaderBarAccessibler describes HeaderBarAccessible's methods.
type HeaderBarAccessibler interface {
	gextras.Objector

	privateHeaderBarAccessible()
}

type HeaderBarAccessible struct {
	ContainerAccessible

	atk.Component
}

var _ HeaderBarAccessibler = (*HeaderBarAccessible)(nil)

func wrapHeaderBarAccessibler(obj *externglib.Object) HeaderBarAccessibler {
	return &HeaderBarAccessible{
		ContainerAccessible: ContainerAccessible{
			WidgetAccessible: WidgetAccessible{
				Accessible: Accessible{
					ObjectClass: atk.ObjectClass{
						Object: obj,
					},
				},
				Component: atk.Component{
					Object: obj,
				},
			},
			Component: atk.Component{
				Object: obj,
			},
		},
		Component: atk.Component{
			Object: obj,
		},
	}
}

func marshalHeaderBarAccessibler(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapHeaderBarAccessibler(obj), nil
}

func (*HeaderBarAccessible) privateHeaderBarAccessible() {}
