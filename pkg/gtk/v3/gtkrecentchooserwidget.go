// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/core/box"
	"github.com/diamondburned/gotk4/core/gerror"
	"github.com/diamondburned/gotk4/core/gextras"
	"github.com/diamondburned/gotk4/pkg/glib/v2"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_recent_chooser_widget_get_type()), F: marshalRecentChooserWidget},
	})
}

// RecentChooserWidget is a widget suitable for selecting recently used files.
// It is the main building block of a RecentChooserDialog. Most applications
// will only need to use the latter; you can use RecentChooserWidget as part of
// a larger window if you have special needs.
//
// Note that RecentChooserWidget does not have any methods of its own. Instead,
// you should use the functions that work on a RecentChooser.
//
// Recently used files are supported since GTK+ 2.10.
type RecentChooserWidget interface {
	Box
	RecentChooser
}

// recentChooserWidget implements the RecentChooserWidget class.
type recentChooserWidget struct {
	Box
}

// WrapRecentChooserWidget wraps a GObject to the right type. It is
// primarily used internally.
func WrapRecentChooserWidget(obj *externglib.Object) RecentChooserWidget {
	return recentChooserWidget{
		Box: WrapBox(obj),
	}
}

func marshalRecentChooserWidget(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapRecentChooserWidget(obj), nil
}

func NewRecentChooserWidget() RecentChooserWidget {
	var _cret *C.GtkWidget // in

	_cret = C.gtk_recent_chooser_widget_new()

	var _recentChooserWidget RecentChooserWidget // out

	_recentChooserWidget = gextras.CastObject(externglib.Take(unsafe.Pointer(_cret))).(RecentChooserWidget)

	return _recentChooserWidget
}

func NewRecentChooserWidgetForManager(manager RecentManager) RecentChooserWidget {
	var _arg1 *C.GtkRecentManager // out
	var _cret *C.GtkWidget        // in

	_arg1 = (*C.GtkRecentManager)(unsafe.Pointer(manager.Native()))

	_cret = C.gtk_recent_chooser_widget_new_for_manager(_arg1)

	var _recentChooserWidget RecentChooserWidget // out

	_recentChooserWidget = gextras.CastObject(externglib.Take(unsafe.Pointer(_cret))).(RecentChooserWidget)

	return _recentChooserWidget
}

func (b recentChooserWidget) AddChild(builder Builder, child gextras.Objector, typ string) {
	WrapBuildable(gextras.InternObject(b)).AddChild(builder, child, typ)
}

func (b recentChooserWidget) ConstructChild(builder Builder, name string) gextras.Objector {
	return WrapBuildable(gextras.InternObject(b)).ConstructChild(builder, name)
}

func (b recentChooserWidget) CustomFinished(builder Builder, child gextras.Objector, tagname string, data interface{}) {
	WrapBuildable(gextras.InternObject(b)).CustomFinished(builder, child, tagname, data)
}

func (b recentChooserWidget) CustomTagEnd(builder Builder, child gextras.Objector, tagname string, data *interface{}) {
	WrapBuildable(gextras.InternObject(b)).CustomTagEnd(builder, child, tagname, data)
}

func (b recentChooserWidget) CustomTagStart(builder Builder, child gextras.Objector, tagname string) (glib.MarkupParser, interface{}, bool) {
	return WrapBuildable(gextras.InternObject(b)).CustomTagStart(builder, child, tagname)
}

func (b recentChooserWidget) InternalChild(builder Builder, childname string) gextras.Objector {
	return WrapBuildable(gextras.InternObject(b)).InternalChild(builder, childname)
}

func (b recentChooserWidget) Name() string {
	return WrapBuildable(gextras.InternObject(b)).Name()
}

func (b recentChooserWidget) ParserFinished(builder Builder) {
	WrapBuildable(gextras.InternObject(b)).ParserFinished(builder)
}

func (b recentChooserWidget) SetBuildableProperty(builder Builder, name string, value externglib.Value) {
	WrapBuildable(gextras.InternObject(b)).SetBuildableProperty(builder, name, value)
}

func (b recentChooserWidget) SetName(name string) {
	WrapBuildable(gextras.InternObject(b)).SetName(name)
}

func (o recentChooserWidget) Orientation() Orientation {
	return WrapOrientable(gextras.InternObject(o)).Orientation()
}

func (o recentChooserWidget) SetOrientation(orientation Orientation) {
	WrapOrientable(gextras.InternObject(o)).SetOrientation(orientation)
}

func (c recentChooserWidget) AddFilter(filter RecentFilter) {
	WrapRecentChooser(gextras.InternObject(c)).AddFilter(filter)
}

func (c recentChooserWidget) CurrentItem() *RecentInfo {
	return WrapRecentChooser(gextras.InternObject(c)).CurrentItem()
}

func (c recentChooserWidget) CurrentURI() string {
	return WrapRecentChooser(gextras.InternObject(c)).CurrentURI()
}

func (c recentChooserWidget) Filter() RecentFilter {
	return WrapRecentChooser(gextras.InternObject(c)).Filter()
}

func (c recentChooserWidget) Limit() int {
	return WrapRecentChooser(gextras.InternObject(c)).Limit()
}

func (c recentChooserWidget) LocalOnly() bool {
	return WrapRecentChooser(gextras.InternObject(c)).LocalOnly()
}

func (c recentChooserWidget) SelectMultiple() bool {
	return WrapRecentChooser(gextras.InternObject(c)).SelectMultiple()
}

func (c recentChooserWidget) ShowIcons() bool {
	return WrapRecentChooser(gextras.InternObject(c)).ShowIcons()
}

func (c recentChooserWidget) ShowNotFound() bool {
	return WrapRecentChooser(gextras.InternObject(c)).ShowNotFound()
}

func (c recentChooserWidget) ShowPrivate() bool {
	return WrapRecentChooser(gextras.InternObject(c)).ShowPrivate()
}

func (c recentChooserWidget) ShowTips() bool {
	return WrapRecentChooser(gextras.InternObject(c)).ShowTips()
}

func (c recentChooserWidget) SortType() RecentSortType {
	return WrapRecentChooser(gextras.InternObject(c)).SortType()
}

func (c recentChooserWidget) RemoveFilter(filter RecentFilter) {
	WrapRecentChooser(gextras.InternObject(c)).RemoveFilter(filter)
}

func (c recentChooserWidget) SelectAll() {
	WrapRecentChooser(gextras.InternObject(c)).SelectAll()
}

func (c recentChooserWidget) SelectURI(uri string) error {
	return WrapRecentChooser(gextras.InternObject(c)).SelectURI(uri)
}

func (c recentChooserWidget) SetCurrentURI(uri string) error {
	return WrapRecentChooser(gextras.InternObject(c)).SetCurrentURI(uri)
}

func (c recentChooserWidget) SetFilter(filter RecentFilter) {
	WrapRecentChooser(gextras.InternObject(c)).SetFilter(filter)
}

func (c recentChooserWidget) SetLimit(limit int) {
	WrapRecentChooser(gextras.InternObject(c)).SetLimit(limit)
}

func (c recentChooserWidget) SetLocalOnly(localOnly bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetLocalOnly(localOnly)
}

func (c recentChooserWidget) SetSelectMultiple(selectMultiple bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetSelectMultiple(selectMultiple)
}

func (c recentChooserWidget) SetShowIcons(showIcons bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetShowIcons(showIcons)
}

func (c recentChooserWidget) SetShowNotFound(showNotFound bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetShowNotFound(showNotFound)
}

func (c recentChooserWidget) SetShowPrivate(showPrivate bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetShowPrivate(showPrivate)
}

func (c recentChooserWidget) SetShowTips(showTips bool) {
	WrapRecentChooser(gextras.InternObject(c)).SetShowTips(showTips)
}

func (c recentChooserWidget) SetSortType(sortType RecentSortType) {
	WrapRecentChooser(gextras.InternObject(c)).SetSortType(sortType)
}

func (c recentChooserWidget) UnselectAll() {
	WrapRecentChooser(gextras.InternObject(c)).UnselectAll()
}

func (c recentChooserWidget) UnselectURI(uri string) {
	WrapRecentChooser(gextras.InternObject(c)).UnselectURI(uri)
}
