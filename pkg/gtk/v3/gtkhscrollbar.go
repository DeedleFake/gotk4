// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_hscrollbar_get_type()), F: marshalHScrollbarrer},
	})
}

// HScrollbarrer describes HScrollbar's methods.
type HScrollbarrer interface {
	gextras.Objector

	privateHScrollbar()
}

// HScrollbar: the HScrollbar widget is a widget arranged horizontally creating
// a scrollbar. See Scrollbar for details on scrollbars. Adjustment pointers may
// be added to handle the adjustment of the scrollbar or it may be left nil in
// which case one will be created for you. See Scrollbar for a description of
// what the fields in an adjustment represent for a scrollbar.
//
// GtkHScrollbar has been deprecated, use Scrollbar instead.
type HScrollbar struct {
	*externglib.Object
	Scrollbar
	Buildable
	Orientable
}

var _ HScrollbarrer = (*HScrollbar)(nil)

func wrapHScrollbarrer(obj *externglib.Object) HScrollbarrer {
	return &HScrollbar{
		Object: obj,
		Scrollbar: Scrollbar{
			Object: obj,
			Range: Range{
				Object: obj,
				Widget: Widget{
					Object: obj,
					InitiallyUnowned: externglib.InitiallyUnowned{
						Object: obj,
					},
					Buildable: Buildable{
						Object: obj,
					},
				},
				Buildable: Buildable{
					Object: obj,
				},
				Orientable: Orientable{
					Object: obj,
				},
			},
			Buildable: Buildable{
				Object: obj,
			},
			Orientable: Orientable{
				Object: obj,
			},
		},
		Buildable: Buildable{
			Object: obj,
		},
		Orientable: Orientable{
			Object: obj,
		},
	}
}

func marshalHScrollbarrer(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapHScrollbarrer(obj), nil
}

// NewHScrollbar creates a new horizontal scrollbar.
//
// Deprecated: Use gtk_scrollbar_new() with GTK_ORIENTATION_HORIZONTAL instead.
func NewHScrollbar(adjustment Adjustmenter) *HScrollbar {
	var _arg1 *C.GtkAdjustment // out
	var _cret *C.GtkWidget     // in

	_arg1 = (*C.GtkAdjustment)(unsafe.Pointer(adjustment.Native()))

	_cret = C.gtk_hscrollbar_new(_arg1)

	var _hScrollbar *HScrollbar // out

	_hScrollbar = (gextras.CastObject(externglib.Take(unsafe.Pointer(_cret)))).(*HScrollbar)

	return _hScrollbar
}

func (*HScrollbar) privateHScrollbar() {}
