// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

type WindowGeometryInfo struct {
	native C.GtkWindowGeometryInfo
}

// WrapWindowGeometryInfo wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapWindowGeometryInfo(ptr unsafe.Pointer) *WindowGeometryInfo {
	if ptr == nil {
		return nil
	}

	return (*WindowGeometryInfo)(ptr)
}

func marshalWindowGeometryInfo(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return WrapWindowGeometryInfo(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (w *WindowGeometryInfo) Native() unsafe.Pointer {
	return unsafe.Pointer(&w.native)
}

type WindowGroupPrivate struct {
	native C.GtkWindowGroupPrivate
}

// WrapWindowGroupPrivate wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapWindowGroupPrivate(ptr unsafe.Pointer) *WindowGroupPrivate {
	if ptr == nil {
		return nil
	}

	return (*WindowGroupPrivate)(ptr)
}

func marshalWindowGroupPrivate(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return WrapWindowGroupPrivate(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (w *WindowGroupPrivate) Native() unsafe.Pointer {
	return unsafe.Pointer(&w.native)
}

type WindowPrivate struct {
	native C.GtkWindowPrivate
}

// WrapWindowPrivate wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapWindowPrivate(ptr unsafe.Pointer) *WindowPrivate {
	if ptr == nil {
		return nil
	}

	return (*WindowPrivate)(ptr)
}

func marshalWindowPrivate(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return WrapWindowPrivate(unsafe.Pointer(b)), nil
}

// Native returns the underlying C source pointer.
func (w *WindowPrivate) Native() unsafe.Pointer {
	return unsafe.Pointer(&w.native)
}
