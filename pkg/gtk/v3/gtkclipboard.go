// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"reflect"
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/internal/box"
	"github.com/diamondburned/gotk4/internal/gextras"
	"github.com/diamondburned/gotk4/pkg/gdk/v3"
	"github.com/diamondburned/gotk4/pkg/gdkpixbuf/v2"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <stdbool.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
//
// void gotk4_ClipboardImageReceivedFunc(GtkClipboard*, GdkPixbuf*, gpointer);
// void gotk4_ClipboardReceivedFunc(GtkClipboard*, GtkSelectionData*, gpointer);
// void gotk4_ClipboardRichTextReceivedFunc(GtkClipboard*, GdkAtom,  guint8*, gsize, gpointer);
// void gotk4_ClipboardTargetsReceivedFunc(GtkClipboard*, GdkAtom*, gint, gpointer);
// void gotk4_ClipboardTextReceivedFunc(GtkClipboard*,  gchar*, gpointer);
// void gotk4_ClipboardURIReceivedFunc(GtkClipboard*, gchar**, gpointer);
import "C"

// ClipboardImageReceivedFunc: a function to be called when the results of
// gtk_clipboard_request_image() are received, or when the request fails.
type ClipboardImageReceivedFunc func(clipboard Clipboard, pixbuf gdkpixbuf.Pixbuf)

//export gotk4_ClipboardImageReceivedFunc
func gotk4_ClipboardImageReceivedFunc(arg0 *C.GtkClipboard, arg1 *C.GdkPixbuf, arg2 C.gpointer) {
	v := box.Get(uintptr(arg2))
	if v == nil {
		panic(`callback not found`)
	}

	var clipboard Clipboard
	var pixbuf gdkpixbuf.Pixbuf

	clipboard = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(Clipboard)

	pixbuf = gextras.CastObject(externglib.Take(unsafe.Pointer(arg1.Native()))).(gdkpixbuf.Pixbuf)

	v.(ClipboardImageReceivedFunc)(clipboard, pixbuf)
}

// ClipboardReceivedFunc: a function to be called when the results of
// gtk_clipboard_request_contents() are received, or when the request fails.
type ClipboardReceivedFunc func(clipboard Clipboard, selectionData *SelectionData)

//export gotk4_ClipboardReceivedFunc
func gotk4_ClipboardReceivedFunc(arg0 *C.GtkClipboard, arg1 *C.GtkSelectionData, arg2 C.gpointer) {
	v := box.Get(uintptr(arg2))
	if v == nil {
		panic(`callback not found`)
	}

	var clipboard Clipboard
	var selectionData *SelectionData

	clipboard = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(Clipboard)

	{
		selectionData = WrapSelectionData(unsafe.Pointer(arg1))
	}

	v.(ClipboardReceivedFunc)(clipboard, selectionData)
}

// ClipboardRichTextReceivedFunc: a function to be called when the results of
// gtk_clipboard_request_rich_text() are received, or when the request fails.
type ClipboardRichTextReceivedFunc func(clipboard Clipboard, format gdk.Atom, text string, length uint)

//export gotk4_ClipboardRichTextReceivedFunc
func gotk4_ClipboardRichTextReceivedFunc(arg0 *C.GtkClipboard, arg1 C.GdkAtom, arg2 *C.guint8, arg3 C.gsize, arg4 C.gpointer) {
	v := box.Get(uintptr(arg4))
	if v == nil {
		panic(`callback not found`)
	}

	var clipboard Clipboard
	var format gdk.Atom
	var text string
	var length uint

	clipboard = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(Clipboard)

	{
		format = gdk.WrapAtom(unsafe.Pointer(arg1))
	}

	text = C.GoString(arg2)

	length = uint(arg3)

	v.(ClipboardRichTextReceivedFunc)(clipboard, format, text, length)
}

// ClipboardTargetsReceivedFunc: a function to be called when the results of
// gtk_clipboard_request_targets() are received, or when the request fails.
type ClipboardTargetsReceivedFunc func(clipboard Clipboard, atoms []gdk.Atom)

//export gotk4_ClipboardTargetsReceivedFunc
func gotk4_ClipboardTargetsReceivedFunc(arg0 *C.GtkClipboard, arg1 *C.GdkAtom, arg2 C.gint, arg3 C.gpointer) {
	v := box.Get(uintptr(arg3))
	if v == nil {
		panic(`callback not found`)
	}

	var clipboard Clipboard
	var atoms []gdk.Atom

	clipboard = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(Clipboard)

	{
		atoms = make([]gdk.Atom, arg2)
		for i := 0; i < uintptr(arg2); i++ {
			src := (C.GdkAtom)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + i))
			{
				atoms[i] = gdk.WrapAtom(unsafe.Pointer(src))
			}
		}
	}

	v.(ClipboardTargetsReceivedFunc)(clipboard, atoms)
}

// ClipboardTextReceivedFunc: a function to be called when the results of
// gtk_clipboard_request_text() are received, or when the request fails.
type ClipboardTextReceivedFunc func(clipboard Clipboard, text string)

//export gotk4_ClipboardTextReceivedFunc
func gotk4_ClipboardTextReceivedFunc(arg0 *C.GtkClipboard, arg1 *C.gchar, arg2 C.gpointer) {
	v := box.Get(uintptr(arg2))
	if v == nil {
		panic(`callback not found`)
	}

	var clipboard Clipboard
	var text string

	clipboard = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(Clipboard)

	text = C.GoString(arg1)

	v.(ClipboardTextReceivedFunc)(clipboard, text)
}

// ClipboardURIReceivedFunc: a function to be called when the results of
// gtk_clipboard_request_uris() are received, or when the request fails.
type ClipboardURIReceivedFunc func(clipboard Clipboard, uris []string)

//export gotk4_ClipboardURIReceivedFunc
func gotk4_ClipboardURIReceivedFunc(arg0 *C.GtkClipboard, arg1 **C.gchar, arg2 C.gpointer) {
	v := box.Get(uintptr(arg2))
	if v == nil {
		panic(`callback not found`)
	}

	var clipboard Clipboard
	var uris []string

	clipboard = gextras.CastObject(externglib.Take(unsafe.Pointer(arg0.Native()))).(Clipboard)

	{
		var length uint
		for p := unsafe.Pointer(arg1); *p != 0; p = unsafe.Pointer(uintptr(p) + 1) {
			length++
		}

		uris = make([]string, length)
		for i := 0; i < length; i++ {
			src := (*C.gchar)(unsafe.Pointer(uintptr(unsafe.Pointer(arg1)) + i))
			uris[i] = C.GoString(src)
		}
	}

	v.(ClipboardURIReceivedFunc)(clipboard, uris)
}
