// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk+-3.0 glib-2.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <glib-object.h>
// #include <gtk/gtk-a11y.h>
// #include <gtk/gtk.h>
// #include <gtk/gtkx.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_revealer_get_type()), F: marshalRevealer},
	})
}

// Revealer: the GtkRevealer widget is a container which animates the transition
// of its child from invisible to visible.
//
// The style of transition can be controlled with
// gtk_revealer_set_transition_type().
//
// These animations respect the Settings:gtk-enable-animations setting.
//
//
// CSS nodes
//
// GtkRevealer has a single CSS node with name revealer.
//
// The GtkRevealer widget was added in GTK+ 3.10.
type Revealer interface {
	Bin
	Buildable

	// ChildRevealed returns whether the child is fully revealed, in other words
	// whether the transition to the revealed state is completed.
	ChildRevealed() bool
	// RevealChild returns whether the child is currently revealed. See
	// gtk_revealer_set_reveal_child().
	//
	// This function returns true as soon as the transition is to the revealed
	// state is started. To learn whether the child is fully revealed (ie the
	// transition is completed), use gtk_revealer_get_child_revealed().
	RevealChild() bool
	// TransitionDuration returns the amount of time (in milliseconds) that
	// transitions will take.
	TransitionDuration() uint
	// SetRevealChild tells the Revealer to reveal or conceal its child.
	//
	// The transition will be animated with the current transition type of
	// @revealer.
	SetRevealChild(revealChild bool)
	// SetTransitionDuration sets the duration that transitions will take.
	SetTransitionDuration(duration uint)
	// SetTransitionType sets the type of animation that will be used for
	// transitions in @revealer. Available types include various kinds of fades
	// and slides.
	SetTransitionType(transition RevealerTransitionType)
}

// revealer implements the Revealer interface.
type revealer struct {
	Bin
	Buildable
}

var _ Revealer = (*revealer)(nil)

// WrapRevealer wraps a GObject to the right type. It is
// primarily used internally.
func WrapRevealer(obj *externglib.Object) Revealer {
	return Revealer{
		Bin:       WrapBin(obj),
		Buildable: WrapBuildable(obj),
	}
}

func marshalRevealer(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapRevealer(obj), nil
}

// ChildRevealed returns whether the child is fully revealed, in other words
// whether the transition to the revealed state is completed.
func (r revealer) ChildRevealed() bool {
	var _arg0 *C.GtkRevealer // out

	_arg0 = (*C.GtkRevealer)(unsafe.Pointer(r.Native()))

	var _cret C.gboolean // in

	_cret = C.gtk_revealer_get_child_revealed(_arg0)

	var _ok bool // out

	if _cret {
		_ok = true
	}

	return _ok
}

// RevealChild returns whether the child is currently revealed. See
// gtk_revealer_set_reveal_child().
//
// This function returns true as soon as the transition is to the revealed
// state is started. To learn whether the child is fully revealed (ie the
// transition is completed), use gtk_revealer_get_child_revealed().
func (r revealer) RevealChild() bool {
	var _arg0 *C.GtkRevealer // out

	_arg0 = (*C.GtkRevealer)(unsafe.Pointer(r.Native()))

	var _cret C.gboolean // in

	_cret = C.gtk_revealer_get_reveal_child(_arg0)

	var _ok bool // out

	if _cret {
		_ok = true
	}

	return _ok
}

// TransitionDuration returns the amount of time (in milliseconds) that
// transitions will take.
func (r revealer) TransitionDuration() uint {
	var _arg0 *C.GtkRevealer // out

	_arg0 = (*C.GtkRevealer)(unsafe.Pointer(r.Native()))

	var _cret C.guint // in

	_cret = C.gtk_revealer_get_transition_duration(_arg0)

	var _guint uint // out

	_guint = (uint)(_cret)

	return _guint
}

// SetRevealChild tells the Revealer to reveal or conceal its child.
//
// The transition will be animated with the current transition type of
// @revealer.
func (r revealer) SetRevealChild(revealChild bool) {
	var _arg0 *C.GtkRevealer // out
	var _arg1 C.gboolean     // out

	_arg0 = (*C.GtkRevealer)(unsafe.Pointer(r.Native()))
	if revealChild {
		_arg1 = C.gboolean(1)
	}

	C.gtk_revealer_set_reveal_child(_arg0, _arg1)
}

// SetTransitionDuration sets the duration that transitions will take.
func (r revealer) SetTransitionDuration(duration uint) {
	var _arg0 *C.GtkRevealer // out
	var _arg1 C.guint        // out

	_arg0 = (*C.GtkRevealer)(unsafe.Pointer(r.Native()))
	_arg1 = C.guint(duration)

	C.gtk_revealer_set_transition_duration(_arg0, _arg1)
}

// SetTransitionType sets the type of animation that will be used for
// transitions in @revealer. Available types include various kinds of fades
// and slides.
func (r revealer) SetTransitionType(transition RevealerTransitionType) {
	var _arg0 *C.GtkRevealer              // out
	var _arg1 C.GtkRevealerTransitionType // out

	_arg0 = (*C.GtkRevealer)(unsafe.Pointer(r.Native()))
	_arg1 = (C.GtkRevealerTransitionType)(transition)

	C.gtk_revealer_set_transition_type(_arg0, _arg1)
}
