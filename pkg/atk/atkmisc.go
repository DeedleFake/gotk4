// Code generated by girgen. DO NOT EDIT.

package atk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: atk
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <atk/atk.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.atk_misc_get_type()), F: marshalMisc},
	})
}

// Misc: a set of utility functions for thread locking. This interface and all
// his related methods are deprecated since 2.12.
type Misc interface {
	gextras.Objector

	ThreadsEnterMisc()

	ThreadsLeaveMisc()
}

// misc implements the Misc class.
type misc struct {
	gextras.Objector
}

// WrapMisc wraps a GObject to the right type. It is
// primarily used internally.
func WrapMisc(obj *externglib.Object) Misc {
	return misc{
		Objector: obj,
	}
}

func marshalMisc(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapMisc(obj), nil
}

func (m misc) ThreadsEnterMisc() {
	var _arg0 *C.AtkMisc // out

	_arg0 = (*C.AtkMisc)(unsafe.Pointer(m.Native()))

	C.atk_misc_threads_enter(_arg0)
}

func (m misc) ThreadsLeaveMisc() {
	var _arg0 *C.AtkMisc // out

	_arg0 = (*C.AtkMisc)(unsafe.Pointer(m.Native()))

	C.atk_misc_threads_leave(_arg0)
}
