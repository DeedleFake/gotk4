// Code generated by girgen. DO NOT EDIT.

package gdkx11

// #cgo pkg-config: gdk-x11-3.0 gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <gdk/gdkx.h>
import "C"

// X11AtomToXatom converts from a Atom to the X atom for the default GDK display
// with the same string value.
func X11AtomToXatom(atom gdk.Atom) {
	var arg1 C.GdkAtom

	arg1 = (C.GdkAtom)(unsafe.Pointer(atom.Native()))

	C.gdk_x11_atom_to_xatom(arg1)
}

// X11AtomToXatomForDisplay converts from a Atom to the X atom for a Display
// with the same string value. The special value GDK_NONE is converted to None.
func X11AtomToXatomForDisplay(display X11Display, atom gdk.Atom) {
	var arg1 *C.GdkDisplay
	var arg2 C.GdkAtom

	arg1 = (*C.GdkDisplay)(unsafe.Pointer(display.Native()))
	arg2 = (C.GdkAtom)(unsafe.Pointer(atom.Native()))

	C.gdk_x11_atom_to_xatom_for_display(arg1, arg2)
}

// X11GetXatomByName returns the X atom for GDKâ€™s default display corresponding
// to @atom_name. This function caches the result, so if called repeatedly it is
// much faster than XInternAtom(), which is a round trip to the server each
// time.
func X11GetXatomByName(atomName string) {
	var arg1 *C.gchar

	arg1 = (*C.gchar)(C.CString(atomName))
	defer C.free(unsafe.Pointer(arg1))

	C.gdk_x11_get_xatom_by_name(arg1)
}

// X11GetXatomByNameForDisplay returns the X atom for a Display corresponding to
// @atom_name. This function caches the result, so if called repeatedly it is
// much faster than XInternAtom(), which is a round trip to the server each
// time.
func X11GetXatomByNameForDisplay(display X11Display, atomName string) {
	var arg1 *C.GdkDisplay
	var arg2 *C.gchar

	arg1 = (*C.GdkDisplay)(unsafe.Pointer(display.Native()))
	arg2 = (*C.gchar)(C.CString(atomName))
	defer C.free(unsafe.Pointer(arg2))

	C.gdk_x11_get_xatom_by_name_for_display(arg1, arg2)
}
