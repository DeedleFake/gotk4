// Code generated by girgen. DO NOT EDIT.

package gdkx11

import (
	"runtime"

	"github.com/diamondburned/gotk4/pkg/cairo"
)

// #cgo pkg-config: gdk-x11-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <gdk/gdkx.h>
import "C"

// X11GetParentRelativePattern: used with gdk_window_set_background_pattern() to
// inherit background from parent window. Useful for imitating transparency when
// compositing is not available. Otherwise behaves like a transparent pattern.
func X11GetParentRelativePattern() *cairo.Pattern {
	ret := C.gdk_x11_get_parent_relative_pattern()

	var ret0 *cairo.Pattern

	{
		ret0 = cairo.WrapPattern(unsafe.Pointer(ret))
		runtime.SetFinalizer(ret0, func(v *cairo.Pattern) {
			C.free(unsafe.Pointer(v.Native()))
		})
	}

	return ret0
}

// X11GrabServer: call gdk_x11_display_grab() on the default display. To ungrab
// the server again, use gdk_x11_ungrab_server().
//
// gdk_x11_grab_server()/gdk_x11_ungrab_server() calls can be nested.
func X11GrabServer() {
	C.gdk_x11_grab_server()
}

// X11UngrabServer: ungrab the default display after it has been grabbed with
// gdk_x11_grab_server().
func X11UngrabServer() {
	C.gdk_x11_ungrab_server()
}
