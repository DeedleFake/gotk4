// Code generated by girgen. DO NOT EDIT.

package gsk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/glib/v2"
	"github.com/diamondburned/gotk4/pkg/graphene"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <stdbool.h>
// #include <gsk/gsk.h>
import "C"

// TransformParse parses the given @string into a transform and puts it in
// @out_transform.
//
// Strings printed via [method@Gsk.Transform.to_string] can be read in again
// successfully using this function.
//
// If @string does not describe a valid transform, false is returned and nil is
// put in @out_transform.
func TransformParse(string string) (outTransform *Transform, ok bool) {
	var arg1 *C.char
	var arg2 **C.GskTransform // out

	arg1 = (*C.gchar)(C.CString(string))
	defer C.free(unsafe.Pointer(arg1))

	ret := C.gsk_transform_parse(arg1, &arg2)

	var ret0 **Transform
	var ret1 bool

	{
		ret0 = WrapTransform(unsafe.Pointer(arg2))
		runtime.SetFinalizer(ret0, func(v **Transform) {
			C.free(unsafe.Pointer(v.Native()))
		})
	}

	ret1 = C.bool(ret) != 0

	return ret0, ret1
}
