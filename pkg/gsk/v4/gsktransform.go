// Code generated by girgen. DO NOT EDIT.

package gsk

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/glib/v2"
	"github.com/diamondburned/gotk4/pkg/graphene"
)

// #cgo pkg-config:
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <stdbool.h>
// #include <gsk/gsk.h>
import "C"

// TransformParse parses the given @string into a transform and puts it in
// @out_transform. Strings printed via gsk_transform_to_string() can be read in
// again successfully using this function.
//
// If @string does not describe a valid transform, false is returned and nil is
// put in @out_transform.
func TransformParse(string string) (outTransform *Transform, ok bool) {
	var arg1 *C.char

	arg1 = (*C.char)(C.CString(string))
	defer C.free(unsafe.Pointer(arg1))

	var arg2 *C.GskTransform
	var ret2 **Transform
	var cret C.gboolean
	var ret2 bool

	cret = C.gsk_transform_parse(string, &arg2)

	*ret2 = WrapTransform(unsafe.Pointer(arg2))
	runtime.SetFinalizer(*ret2, func(v **Transform) {
		C.free(unsafe.Pointer(v.Native()))
	})
	ret2 = C.bool(cret) != C.false

	return ret2, ret2
}
