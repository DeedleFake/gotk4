// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	"github.com/diamondburned/gotk4/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gio-2.0 gio-unix-2.0 gobject-introspection-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <gio/gdesktopappinfo.h>
// #include <gio/gfiledescriptorbased.h>
// #include <gio/gio.h>
// #include <gio/gunixconnection.h>
// #include <gio/gunixcredentialsmessage.h>
// #include <gio/gunixfdlist.h>
// #include <gio/gunixfdmessage.h>
// #include <gio/gunixinputstream.h>
// #include <gio/gunixmounts.h>
// #include <gio/gunixoutputstream.h>
// #include <gio/gunixsocketaddress.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.g_native_socket_address_get_type()), F: marshalNativeSocketAddress},
	})
}

// NativeSocketAddress: a socket address of some unknown native type.
type NativeSocketAddress interface {
	SocketAddress
}

// nativeSocketAddress implements the NativeSocketAddress class.
type nativeSocketAddress struct {
	SocketAddress
}

// WrapNativeSocketAddress wraps a GObject to the right type. It is
// primarily used internally.
func WrapNativeSocketAddress(obj *externglib.Object) NativeSocketAddress {
	return nativeSocketAddress{
		SocketAddress: WrapSocketAddress(obj),
	}
}

func marshalNativeSocketAddress(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapNativeSocketAddress(obj), nil
}

func (c nativeSocketAddress) Enumerate() SocketAddressEnumerator {
	return WrapSocketConnectable(gextras.InternObject(c)).Enumerate()
}

func (c nativeSocketAddress) ProxyEnumerate() SocketAddressEnumerator {
	return WrapSocketConnectable(gextras.InternObject(c)).ProxyEnumerate()
}

func (c nativeSocketAddress) String() string {
	return WrapSocketConnectable(gextras.InternObject(c)).String()
}
