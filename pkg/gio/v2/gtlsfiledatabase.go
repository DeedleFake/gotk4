// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gio-2.0 gio-unix-2.0 glib-2.0 gobject-introspection-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <gio/gdesktopappinfo.h>
// #include <gio/gfiledescriptorbased.h>
// #include <gio/gio.h>
// #include <gio/gunixconnection.h>
// #include <gio/gunixcredentialsmessage.h>
// #include <gio/gunixfdlist.h>
// #include <gio/gunixfdmessage.h>
// #include <gio/gunixinputstream.h>
// #include <gio/gunixmounts.h>
// #include <gio/gunixoutputstream.h>
// #include <gio/gunixsocketaddress.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.g_tls_file_database_get_type()), F: marshalTLSFileDatabase},
	})
}

// TLSFileDatabase is implemented by Database objects which load their
// certificate information from a file. It is an interface which TLS library
// specific subtypes implement.
type TLSFileDatabase interface {
	TLSDatabase
}

// tlsFileDatabase implements the TLSFileDatabase interface.
type tlsFileDatabase struct {
	TLSDatabase
}

var _ TLSFileDatabase = (*tlsFileDatabase)(nil)

// WrapTLSFileDatabase wraps a GObject to a type that implements interface
// TLSFileDatabase. It is primarily used internally.
func WrapTLSFileDatabase(obj *externglib.Object) TLSFileDatabase {
	return TLSFileDatabase{
		TLSDatabase: WrapTLSDatabase(obj),
	}
}

func marshalTLSFileDatabase(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapTLSFileDatabase(obj), nil
}
