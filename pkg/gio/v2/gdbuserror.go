// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"
)

// #cgo pkg-config: gio-2.0 gio-unix-2.0 gobject-introspection-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <gio/gdesktopappinfo.h>
// #include <gio/gfiledescriptorbased.h>
// #include <gio/gio.h>
// #include <gio/gunixconnection.h>
// #include <gio/gunixcredentialsmessage.h>
// #include <gio/gunixfdlist.h>
// #include <gio/gunixfdmessage.h>
// #include <gio/gunixinputstream.h>
// #include <gio/gunixmounts.h>
// #include <gio/gunixoutputstream.h>
// #include <gio/gunixsocketaddress.h>
import "C"

// DBusErrorEntry: struct used in g_dbus_error_register_error_domain().
type DBusErrorEntry struct {
	native C.GDBusErrorEntry
}

// WrapDBusErrorEntry wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapDBusErrorEntry(ptr unsafe.Pointer) *DBusErrorEntry {
	return (*DBusErrorEntry)(ptr)
}

// Native returns the underlying C source pointer.
func (d *DBusErrorEntry) Native() unsafe.Pointer {
	return unsafe.Pointer(&d.native)
}

// ErrorCode: error code.
func (d *DBusErrorEntry) ErrorCode() int {
	var v int // out
	v = int(d.native.error_code)
	return v
}

// DBusErrorName: the D-Bus error name to associate with @error_code.
func (d *DBusErrorEntry) DBusErrorName() string {
	var v string // out
	v = C.GoString(d.native.dbus_error_name)
	return v
}
