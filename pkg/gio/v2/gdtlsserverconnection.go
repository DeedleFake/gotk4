// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gio-2.0 gio-unix-2.0 gobject-introspection-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <gio/gdesktopappinfo.h>
// #include <gio/gfiledescriptorbased.h>
// #include <gio/gio.h>
// #include <gio/gunixconnection.h>
// #include <gio/gunixcredentialsmessage.h>
// #include <gio/gunixfdlist.h>
// #include <gio/gunixfdmessage.h>
// #include <gio/gunixinputstream.h>
// #include <gio/gunixmounts.h>
// #include <gio/gunixoutputstream.h>
// #include <gio/gunixsocketaddress.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.g_dtls_server_connection_get_type()), F: marshalDTLSServerConnection},
	})
}

// DTLSServerConnection is the server-side subclass of Connection, representing
// a server-side DTLS connection.
type DTLSServerConnection interface {
	gextras.Objector

	privateDTLSServerConnectionInterface()
}

// DTLSServerConnectionInterface implements the DTLSServerConnection interface.
type DTLSServerConnectionInterface struct {
	*externglib.Object
	DatagramBasedInterface
	DTLSConnectionInterface
}

var _ DTLSServerConnection = (*DTLSServerConnectionInterface)(nil)

func wrapDTLSServerConnection(obj *externglib.Object) DTLSServerConnection {
	return &DTLSServerConnectionInterface{
		Object: obj,
		DatagramBasedInterface: DatagramBasedInterface{
			Object: obj,
		},
		DTLSConnectionInterface: DTLSConnectionInterface{
			DatagramBasedInterface: DatagramBasedInterface{
				Object: obj,
			},
		},
	}
}

func marshalDTLSServerConnection(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapDTLSServerConnection(obj), nil
}

func (*DTLSServerConnectionInterface) privateDTLSServerConnectionInterface() {}
