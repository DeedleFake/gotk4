// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gio-2.0 gio-unix-2.0 gobject-introspection-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <gio/gdesktopappinfo.h>
// #include <gio/gfiledescriptorbased.h>
// #include <gio/gio.h>
// #include <gio/gunixconnection.h>
// #include <gio/gunixcredentialsmessage.h>
// #include <gio/gunixfdlist.h>
// #include <gio/gunixfdmessage.h>
// #include <gio/gunixinputstream.h>
// #include <gio/gunixmounts.h>
// #include <gio/gunixoutputstream.h>
// #include <gio/gunixsocketaddress.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.g_native_volume_monitor_get_type()), F: marshalNativeVolumeMonitor},
	})
}

type NativeVolumeMonitor interface {
	gextras.Objector

	// AsVolumeMonitor casts the class to the VolumeMonitor interface.
	AsVolumeMonitor() VolumeMonitor

	// GetMountForUUID finds a #GMount object by its UUID (see
	// g_mount_get_uuid())
	//
	// This method is inherited from VolumeMonitor
	GetMountForUUID(uuid string) Mount
	// GetVolumeForUUID finds a #GVolume object by its UUID (see
	// g_volume_get_uuid())
	//
	// This method is inherited from VolumeMonitor
	GetVolumeForUUID(uuid string) Volume
}

// nativeVolumeMonitor implements the NativeVolumeMonitor interface.
type nativeVolumeMonitor struct {
	*externglib.Object
}

var _ NativeVolumeMonitor = (*nativeVolumeMonitor)(nil)

// WrapNativeVolumeMonitor wraps a GObject to a type that implements
// interface NativeVolumeMonitor. It is primarily used internally.
func WrapNativeVolumeMonitor(obj *externglib.Object) NativeVolumeMonitor {
	return nativeVolumeMonitor{obj}
}

func marshalNativeVolumeMonitor(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapNativeVolumeMonitor(obj), nil
}

func (n nativeVolumeMonitor) AsVolumeMonitor() VolumeMonitor {
	return WrapVolumeMonitor(gextras.InternObject(n))
}

func (v nativeVolumeMonitor) GetMountForUUID(uuid string) Mount {
	return WrapVolumeMonitor(gextras.InternObject(v)).GetMountForUUID(uuid)
}

func (v nativeVolumeMonitor) GetVolumeForUUID(uuid string) Volume {
	return WrapVolumeMonitor(gextras.InternObject(v)).GetVolumeForUUID(uuid)
}
