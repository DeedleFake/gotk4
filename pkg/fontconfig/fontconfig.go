// Code generated by girgen. DO NOT EDIT.

package fontconfig

import (
	"unsafe"
)

// #cgo pkg-config:
// #cgo CFLAGS: -Wno-deprecated-declarations
//
import "C"

func Init() {

	C.FcInit()
}

type Pattern struct {
	native C.FcPattern
}

// WrapPattern wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapPattern(ptr unsafe.Pointer) *Pattern {
	if ptr == nil {
		return nil
	}

	return (*Pattern)(ptr)
}

func marshalPattern(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return WrapPattern(unsafe.Pointer(b))
}

// Native returns the underlying C source pointer.
func (p *Pattern) Native() unsafe.Pointer {
	return unsafe.Pointer(&p.native)
}

type CharSet struct {
	native C.FcCharSet
}

// WrapCharSet wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapCharSet(ptr unsafe.Pointer) *CharSet {
	if ptr == nil {
		return nil
	}

	return (*CharSet)(ptr)
}

func marshalCharSet(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	return WrapCharSet(unsafe.Pointer(b))
}

// Native returns the underlying C source pointer.
func (c *CharSet) Native() unsafe.Pointer {
	return unsafe.Pointer(&c.native)
}
