// Code generated by girgen. DO NOT EDIT.

package gdk

import (
	"unsafe"
)

// #cgo pkg-config: gdk-3.0 gtk+-3.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <gdk/gdk.h>
import "C"

// PropertyChange changes the contents of a property on a window.
func PropertyChange(window Window, property Atom, typ Atom, format int, mode PropMode, data *byte, nelements int) {
	var _arg1 *C.GdkWindow
	var _arg2 C.GdkAtom
	var _arg3 C.GdkAtom
	var _arg4 C.gint
	var _arg5 C.GdkPropMode
	var _arg6 *C.guchar
	var _arg7 C.gint

	_arg1 = (*C.GdkWindow)(unsafe.Pointer(window.Native()))
	_arg2 = (C.GdkAtom)(unsafe.Pointer(property.Native()))
	_arg3 = (C.GdkAtom)(unsafe.Pointer(typ.Native()))
	_arg4 = C.gint(format)
	_arg5 = (C.GdkPropMode)(mode)
	_arg6 = *C.guchar(data)
	_arg7 = C.gint(nelements)

	C.gdk_property_change(_arg1, _arg2, _arg3, _arg4, _arg5, _arg6, _arg7)
}

// PropertyDelete deletes a property from a window.
func PropertyDelete(window Window, property Atom) {
	var _arg1 *C.GdkWindow
	var _arg2 C.GdkAtom

	_arg1 = (*C.GdkWindow)(unsafe.Pointer(window.Native()))
	_arg2 = (C.GdkAtom)(unsafe.Pointer(property.Native()))

	C.gdk_property_delete(_arg1, _arg2)
}

// UTF8ToStringTarget converts an UTF-8 string into the best possible
// representation as a STRING. The representation of characters not in STRING is
// not specified; it may be as pseudo-escape sequences \x{ABCD}, or it may be in
// some other form of approximation.
func UTF8ToStringTarget(str string) string {
	var _arg1 *C.gchar

	_arg1 = (*C.gchar)(C.CString(str))
	defer C.free(unsafe.Pointer(_arg1))

	var _cret *C.gchar

	cret = C.gdk_utf8_to_string_target(_arg1)

	var _utf8 string

	_utf8 = C.GoString(_cret)
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}
