// Code generated by girgen. DO NOT EDIT.

package gdk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/core/gextras"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: gtk4
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <gdk/gdk.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gdk_gl_texture_get_type()), F: marshalGLTexture},
	})
}

// GLTexture: a GdkTexture representing a GL texture object.
type GLTexture interface {
	Texture

	// ReleaseGLTexture:
	ReleaseGLTexture()
}

// glTexture implements the GLTexture class.
type glTexture struct {
	Texture
}

// WrapGLTexture wraps a GObject to the right type. It is
// primarily used internally.
func WrapGLTexture(obj *externglib.Object) GLTexture {
	return glTexture{
		Texture: WrapTexture(obj),
	}
}

func marshalGLTexture(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return WrapGLTexture(obj), nil
}

func (s glTexture) ReleaseGLTexture() {
	var _arg0 *C.GdkGLTexture // out

	_arg0 = (*C.GdkGLTexture)(unsafe.Pointer(s.Native()))

	C.gdk_gl_texture_release(_arg0)
}

func (p glTexture) ComputeConcreteSize(specifiedWidth float64, specifiedHeight float64, defaultWidth float64, defaultHeight float64) (concreteWidth float64, concreteHeight float64) {
	return WrapPaintable(gextras.InternObject(p)).ComputeConcreteSize(specifiedWidth, specifiedHeight, defaultWidth, defaultHeight)
}

func (p glTexture) CurrentImage() Paintable {
	return WrapPaintable(gextras.InternObject(p)).CurrentImage()
}

func (p glTexture) Flags() PaintableFlags {
	return WrapPaintable(gextras.InternObject(p)).Flags()
}

func (p glTexture) IntrinsicAspectRatio() float64 {
	return WrapPaintable(gextras.InternObject(p)).IntrinsicAspectRatio()
}

func (p glTexture) IntrinsicHeight() int {
	return WrapPaintable(gextras.InternObject(p)).IntrinsicHeight()
}

func (p glTexture) IntrinsicWidth() int {
	return WrapPaintable(gextras.InternObject(p)).IntrinsicWidth()
}

func (p glTexture) InvalidateContents() {
	WrapPaintable(gextras.InternObject(p)).InvalidateContents()
}

func (p glTexture) InvalidateSize() {
	WrapPaintable(gextras.InternObject(p)).InvalidateSize()
}

func (p glTexture) Snapshot(snapshot Snapshot, width float64, height float64) {
	WrapPaintable(gextras.InternObject(p)).Snapshot(snapshot, width, height)
}
