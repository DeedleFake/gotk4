// Code generated by girgen. DO NOT EDIT.

package glib

import (
	"unsafe"
)

// #cgo pkg-config: glib-2.0 gobject-introspection-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib.h>
import "C"

// StrvBuilder is a method of easily building dynamically sized NULL-terminated
// string arrays.
//
// The following example shows how to build a two element array:
//
//    g_autoptr(GStrvBuilder) builder = g_strv_builder_new ();
//    g_strv_builder_add (builder, "hello");
//    g_strv_builder_add (builder, "world");
//    g_auto(GStrv) array = g_strv_builder_end (builder);
type StrvBuilder C.GStrvBuilder

// WrapStrvBuilder wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapStrvBuilder(ptr unsafe.Pointer) *StrvBuilder {
	return (*StrvBuilder)(ptr)
}

// Native returns the underlying C source pointer.
func (s *StrvBuilder) Native() unsafe.Pointer {
	return unsafe.Pointer(s)
}
