// Code generated by girgen. DO NOT EDIT.

package glib

import (
	"unsafe"
)

// #cgo pkg-config: glib-2.0 gobject-introspection-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
//
// #include <glib.h>
import "C"

// ErrorType: the possible errors, used in the @v_error field of Value, when the
// token is a G_TOKEN_ERROR.
type ErrorType int

const (
	// Unknown error
	Unknown ErrorType = iota
	// UnexpEOF: unexpected end of file
	UnexpEOF
	// UnexpEOFInString: unterminated string constant
	UnexpEOFInString
	// UnexpEOFInComment: unterminated comment
	UnexpEOFInComment
	// NonDigitInConst: non-digit character in a number
	NonDigitInConst
	// DigitRadix: digit beyond radix in a number
	DigitRadix
	// FloatRadix: non-decimal floating point number
	FloatRadix
	// FloatMalformed: malformed floating point number
	FloatMalformed
)

// TokenType: the possible types of token returned from each
// g_scanner_get_next_token() call.
type TokenType int

const (
	// EOF: the end of the file
	EOF TokenType = 0
	// LeftParen: '(' character
	LeftParen TokenType = 40
	// RightParen: ')' character
	RightParen TokenType = 41
	// LeftCurly: '{' character
	LeftCurly TokenType = 123
	// RightCurly: '}' character
	RightCurly TokenType = 125
	// LeftBrace: '[' character
	LeftBrace TokenType = 91
	// RightBrace: ']' character
	RightBrace TokenType = 93
	// EqualSign: '=' character
	EqualSign TokenType = 61
	// Comma: ',' character
	Comma TokenType = 44
	// None: not a token
	None TokenType = 256
	// Error occurred
	Error TokenType = 257
	// Char: character
	Char TokenType = 258
	// Binary integer
	Binary TokenType = 259
	// Octal integer
	Octal TokenType = 260
	// Int: integer
	Int TokenType = 261
	// Hex integer
	Hex TokenType = 262
	// Float: floating point number
	Float TokenType = 263
	// String: string
	String TokenType = 264
	// Symbol: symbol
	Symbol TokenType = 265
	// Identifier: identifier
	Identifier TokenType = 266
	// IdentifierNull: null identifier
	IdentifierNull TokenType = 267
	// CommentSingle: one line comment
	CommentSingle TokenType = 268
	// CommentMulti: multi line comment
	CommentMulti TokenType = 269
)

// ScannerConfig specifies the #GScanner parser configuration. Most settings can
// be changed during the parsing phase and will affect the lexical parsing of
// the next unpeeked token.
type ScannerConfig struct {
	native C.GScannerConfig
}

// WrapScannerConfig wraps the C unsafe.Pointer to be the right type. It is
// primarily used internally.
func WrapScannerConfig(ptr unsafe.Pointer) *ScannerConfig {
	return (*ScannerConfig)(ptr)
}

// Native returns the underlying C source pointer.
func (s *ScannerConfig) Native() unsafe.Pointer {
	return unsafe.Pointer(&s.native)
}
