// Code generated by girgen. DO NOT EDIT.

package xlib

import (
	"runtime"
	"unsafe"

	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config:
// #cgo CFLAGS: -Wno-deprecated-declarations
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{

		// Objects/Classes
	})
}

type Atom uint32

type Colormap uint32

type Cursor uint32

type Drawable uint32

type GC unsafe.Pointer

type KeyCode uint8

type KeySym uint32

type Picture uint32

type Time uint32

type VisualID uint32

type Window uint32

type XID uint32

type Pixmap uint32

func OpenDisplay()

type Display struct {
	native *C.Display
}

func wrapDisplay(p *C.Display) *Display {
	v := Display{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*Display).free)

	return &v
}

func marshalDisplay(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.Display)(unsafe.Pointer(b))

	return wrapDisplay(c)
}

func (d *Display) free() {}

// Native returns the pointer to *C.Display. The caller is expected to
// cast.
func (d *Display) Native() unsafe.Pointer {
	return unsafe.Pointer(d.native)
}

type Screen struct {
	native *C.Screen
}

func wrapScreen(p *C.Screen) *Screen {
	v := Screen{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*Screen).free)

	return &v
}

func marshalScreen(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.Screen)(unsafe.Pointer(b))

	return wrapScreen(c)
}

func (s *Screen) free() {}

// Native returns the pointer to *C.Screen. The caller is expected to
// cast.
func (s *Screen) Native() unsafe.Pointer {
	return unsafe.Pointer(s.native)
}

type Visual struct {
	native *C.Visual
}

func wrapVisual(p *C.Visual) *Visual {
	v := Visual{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*Visual).free)

	return &v
}

func marshalVisual(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.Visual)(unsafe.Pointer(b))

	return wrapVisual(c)
}

func (v *Visual) free() {}

// Native returns the pointer to *C.Visual. The caller is expected to
// cast.
func (v *Visual) Native() unsafe.Pointer {
	return unsafe.Pointer(v.native)
}

type XConfigureEvent struct {
	native *C.XConfigureEvent
}

func wrapXConfigureEvent(p *C.XConfigureEvent) *XConfigureEvent {
	v := XConfigureEvent{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*XConfigureEvent).free)

	return &v
}

func marshalXConfigureEvent(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.XConfigureEvent)(unsafe.Pointer(b))

	return wrapXConfigureEvent(c)
}

func (x *XConfigureEvent) free() {}

// Native returns the pointer to *C.XConfigureEvent. The caller is expected to
// cast.
func (x *XConfigureEvent) Native() unsafe.Pointer {
	return unsafe.Pointer(x.native)
}

type XImage struct {
	native *C.XImage
}

func wrapXImage(p *C.XImage) *XImage {
	v := XImage{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*XImage).free)

	return &v
}

func marshalXImage(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.XImage)(unsafe.Pointer(b))

	return wrapXImage(c)
}

func (x *XImage) free() {}

// Native returns the pointer to *C.XImage. The caller is expected to
// cast.
func (x *XImage) Native() unsafe.Pointer {
	return unsafe.Pointer(x.native)
}

type XFontStruct struct {
	native *C.XFontStruct
}

func wrapXFontStruct(p *C.XFontStruct) *XFontStruct {
	v := XFontStruct{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*XFontStruct).free)

	return &v
}

func marshalXFontStruct(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.XFontStruct)(unsafe.Pointer(b))

	return wrapXFontStruct(c)
}

func (x *XFontStruct) free() {}

// Native returns the pointer to *C.XFontStruct. The caller is expected to
// cast.
func (x *XFontStruct) Native() unsafe.Pointer {
	return unsafe.Pointer(x.native)
}

type XTrapezoid struct {
	native *C.XTrapezoid
}

func wrapXTrapezoid(p *C.XTrapezoid) *XTrapezoid {
	v := XTrapezoid{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*XTrapezoid).free)

	return &v
}

func marshalXTrapezoid(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.XTrapezoid)(unsafe.Pointer(b))

	return wrapXTrapezoid(c)
}

func (x *XTrapezoid) free() {}

// Native returns the pointer to *C.XTrapezoid. The caller is expected to
// cast.
func (x *XTrapezoid) Native() unsafe.Pointer {
	return unsafe.Pointer(x.native)
}

type XVisualInfo struct {
	native *C.XVisualInfo
}

func wrapXVisualInfo(p *C.XVisualInfo) *XVisualInfo {
	v := XVisualInfo{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*XVisualInfo).free)

	return &v
}

func marshalXVisualInfo(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.XVisualInfo)(unsafe.Pointer(b))

	return wrapXVisualInfo(c)
}

func (x *XVisualInfo) free() {}

// Native returns the pointer to *C.XVisualInfo. The caller is expected to
// cast.
func (x *XVisualInfo) Native() unsafe.Pointer {
	return unsafe.Pointer(x.native)
}

type XWindowAttributes struct {
	native *C.XWindowAttributes
}

func wrapXWindowAttributes(p *C.XWindowAttributes) *XWindowAttributes {
	v := XWindowAttributes{native: p}

	runtime.SetFinalizer(v, nil)
	runtime.SetFinalizer(v, (*XWindowAttributes).free)

	return &v
}

func marshalXWindowAttributes(p uintptr) (interface{}, error) {
	b := C.g_value_get_boxed((*C.GValue)(unsafe.Pointer(p)))
	c := (*C.XWindowAttributes)(unsafe.Pointer(b))

	return wrapXWindowAttributes(c)
}

func (x *XWindowAttributes) free() {}

// Native returns the pointer to *C.XWindowAttributes. The caller is expected to
// cast.
func (x *XWindowAttributes) Native() unsafe.Pointer {
	return unsafe.Pointer(x.native)
}
